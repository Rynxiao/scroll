webpackJsonp([0],{0:function(module,exports,__webpack_require__){eval("'use strict';\n\n__webpack_require__(1);\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(39);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _MyScroll = __webpack_require__(179);\n\nvar _MyScroll2 = _interopRequireDefault(_MyScroll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * Created by Ryn on 2016/8/7.\r\n * 入口文件\r\n */\n\nvar App = _react2.default.createClass({\n    displayName: 'App',\n    getInitialState: function getInitialState() {\n        return {\n            list: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n            newList: [],\n            page: 1\n        };\n    },\n    _getData: function _getData(page) {\n        if (page < 3) {\n            var list = [];\n            for (var i = 0; i < 10; i++) {\n                list.push(i);\n            }\n            return list;\n        } else {\n            return [];\n        }\n    },\n    componentDidMount: function componentDidMount() {\n        var _state = this.state;\n        var newList = _state.newList;\n        var page = _state.page;\n\n        newList = this._getData(page);\n        this.setState({ newList: newList });\n    },\n    onRefresh: function onRefresh(callback) {\n        var _this = this;\n\n        var list = this.state.list;\n\n        setTimeout(function () {\n            _this.setState({ newList: list, page: 1 }, function () {\n                callback();\n            });\n        }, 800);\n    },\n    onPullLoad: function onPullLoad(callback) {\n        var _this2 = this;\n\n        var _state2 = this.state;\n        var newList = _state2.newList;\n        var page = _state2.page;\n\n\n        this.setState({ page: page + 1 }, function () {\n            setTimeout(function () {\n                newList = newList.concat(_this2._getData(page));\n                _this2.setState({ newList: newList }, function () {\n                    callback();\n                });\n            }, 800);\n        });\n    },\n    render: function render() {\n        var newList = this.state.newList;\n\n        return _react2.default.createElement(\n            'div',\n            { className: 's-container' },\n            _react2.default.createElement('div', { className: 'padding' }),\n            _react2.default.createElement(\n                _MyScroll2.default,\n                {\n                    upText: 'shang hua',\n                    downText: '下 la',\n                    loadingText: '快点出来啊。。。',\n                    completeText: '加载完成咯',\n                    infinite: newList.length < 30,\n                    onPullLoad: this.onPullLoad,\n                    onRefresh: this.onRefresh },\n                _react2.default.createElement(\n                    'ul',\n                    { className: 'scroll-content' },\n                    newList.map(function (l, index) {\n                        return _react2.default.createElement(\n                            'li',\n                            { key: 'l' + index },\n                            'li ',\n                            l\n                        );\n                    })\n                )\n            )\n        );\n    }\n});\n\n_reactDom2.default.render(_react2.default.createElement(App, null), document.getElementById('slider'));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9lbnRyeS9hcHAuanM/MjFhZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUtBOztBQUVBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBVEE7Ozs7O0FBV0EsSUFBTSxNQUFNLGdCQUFNLFdBQU4sQ0FBa0I7QUFBQTtBQUUxQixtQkFGMEIsNkJBRVI7QUFDZCxlQUFPO0FBQ0gsa0JBQU8sQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixFQUE1QixDQURKO0FBRUgscUJBQVUsRUFGUDtBQUdILGtCQUFPO0FBSEosU0FBUDtBQUtILEtBUnlCO0FBVTFCLFlBVjBCLG9CQVVqQixJQVZpQixFQVVYO0FBQ1gsWUFBSSxPQUFPLENBQVgsRUFBYztBQUNWLGdCQUFJLE9BQU8sRUFBWDtBQUNBLGlCQUFLLElBQUksSUFBSSxDQUFiLEVBQWdCLElBQUksRUFBcEIsRUFBd0IsR0FBeEIsRUFBNkI7QUFDekIscUJBQUssSUFBTCxDQUFVLENBQVY7QUFDSDtBQUNELG1CQUFPLElBQVA7QUFDSCxTQU5ELE1BTU87QUFDSCxtQkFBTyxFQUFQO0FBQ0g7QUFDSixLQXBCeUI7QUFzQjFCLHFCQXRCMEIsK0JBc0JOO0FBQUEscUJBQ1EsS0FBSyxLQURiO0FBQUEsWUFDVixPQURVLFVBQ1YsT0FEVTtBQUFBLFlBQ0QsSUFEQyxVQUNELElBREM7O0FBRWhCLGtCQUFVLEtBQUssUUFBTCxDQUFjLElBQWQsQ0FBVjtBQUNBLGFBQUssUUFBTCxDQUFjLEVBQUMsU0FBVSxPQUFYLEVBQWQ7QUFFSCxLQTNCeUI7QUE2QjFCLGFBN0IwQixxQkE2QmhCLFFBN0JnQixFQTZCTjtBQUFBOztBQUFBLFlBQ1YsSUFEVSxHQUNELEtBQUssS0FESixDQUNWLElBRFU7O0FBRWhCLG1CQUFXLFlBQU07QUFDYixrQkFBSyxRQUFMLENBQWMsRUFBQyxTQUFVLElBQVgsRUFBaUIsTUFBTyxDQUF4QixFQUFkLEVBQTBDLFlBQU07QUFDNUM7QUFDSCxhQUZEO0FBR0gsU0FKRCxFQUlHLEdBSkg7QUFLSCxLQXBDeUI7QUFzQzFCLGNBdEMwQixzQkFzQ2YsUUF0Q2UsRUFzQ0w7QUFBQTs7QUFBQSxzQkFDTyxLQUFLLEtBRFo7QUFBQSxZQUNYLE9BRFcsV0FDWCxPQURXO0FBQUEsWUFDRixJQURFLFdBQ0YsSUFERTs7O0FBR2pCLGFBQUssUUFBTCxDQUFjLEVBQUMsTUFBTyxPQUFPLENBQWYsRUFBZCxFQUFpQyxZQUFNO0FBQ25DLHVCQUFXLFlBQU07QUFDYiwwQkFBVSxRQUFRLE1BQVIsQ0FBZSxPQUFLLFFBQUwsQ0FBYyxJQUFkLENBQWYsQ0FBVjtBQUNBLHVCQUFLLFFBQUwsQ0FBYyxFQUFDLFNBQVUsT0FBWCxFQUFkLEVBQW1DLFlBQU07QUFDckM7QUFDSCxpQkFGRDtBQUdILGFBTEQsRUFLRyxHQUxIO0FBTUgsU0FQRDtBQVFILEtBakR5QjtBQW1EMUIsVUFuRDBCLG9CQW1EakI7QUFBQSxZQUNDLE9BREQsR0FDYSxLQUFLLEtBRGxCLENBQ0MsT0FERDs7QUFFTCxlQUNJO0FBQUE7QUFBQSxjQUFLLFdBQVUsYUFBZjtBQUNJLG1EQUFLLFdBQVUsU0FBZixHQURKO0FBRUk7QUFBQTtBQUFBO0FBQ0ksNEJBQU8sV0FEWDtBQUVJLDhCQUFTLE1BRmI7QUFHSSxpQ0FBWSxVQUhoQjtBQUlJLGtDQUFhLE9BSmpCO0FBS0ksOEJBQVUsUUFBUSxNQUFSLEdBQWlCLEVBTC9CO0FBTUksZ0NBQVksS0FBSyxVQU5yQjtBQU9JLCtCQUFXLEtBQUssU0FQcEI7QUFRSTtBQUFBO0FBQUEsc0JBQUksV0FBVSxnQkFBZDtBQUVRLDRCQUFRLEdBQVIsQ0FBWSxVQUFDLENBQUQsRUFBSSxLQUFKLEVBQWM7QUFDdEIsK0JBQVE7QUFBQTtBQUFBLDhCQUFJLEtBQUssTUFBSSxLQUFiO0FBQUE7QUFBd0I7QUFBeEIseUJBQVI7QUFDSCxxQkFGRDtBQUZSO0FBUko7QUFGSixTQURKO0FBcUJIO0FBMUV5QixDQUFsQixDQUFaOztBQTZFQSxtQkFBUyxNQUFULENBQ0ksOEJBQUMsR0FBRCxPQURKLEVBRUksU0FBUyxjQUFULENBQXdCLFFBQXhCLENBRkoiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IFJ5biBvbiAyMDE2LzgvNy5cclxuICog5YWl5Y+j5paH5Lu2XHJcbiAqL1xyXG5cclxuaW1wb3J0ICcuLi9zdHlsZS9zdHlsZS5jc3MnO1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XHJcbmltcG9ydCBNeVNjcm9sbCBmcm9tICcuLi9jb21wb25lbnRzL015U2Nyb2xsJztcclxuXHJcbmNvbnN0IEFwcCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcclxuXHJcbiAgICBnZXRJbml0aWFsU3RhdGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbGlzdCA6IFsxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5LCAxMF0sXHJcbiAgICAgICAgICAgIG5ld0xpc3QgOiBbXSxcclxuICAgICAgICAgICAgcGFnZSA6IDFcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIF9nZXREYXRhKHBhZ2UpIHtcclxuICAgICAgICBpZiAocGFnZSA8IDMpIHtcclxuICAgICAgICAgICAgbGV0IGxpc3QgPSBbXTtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBsaXN0LnB1c2goaSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGxpc3Q7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICAgICAgbGV0IHsgbmV3TGlzdCwgcGFnZSB9ID0gdGhpcy5zdGF0ZTtcclxuICAgICAgICBuZXdMaXN0ID0gdGhpcy5fZ2V0RGF0YShwYWdlKTtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtuZXdMaXN0IDogbmV3TGlzdH0pO1xyXG5cclxuICAgIH0sXHJcblxyXG4gICAgb25SZWZyZXNoKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgbGV0IHsgbGlzdCB9ID0gdGhpcy5zdGF0ZTtcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7bmV3TGlzdCA6IGxpc3QsIHBhZ2UgOiAxfSwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSwgODAwKTtcclxuICAgIH0sXHJcblxyXG4gICAgb25QdWxsTG9hZChjYWxsYmFjaykge1xyXG4gICAgICAgIGxldCB7IG5ld0xpc3QsIHBhZ2UgfSA9IHRoaXMuc3RhdGU7XHJcblxyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3BhZ2UgOiBwYWdlICsgMX0sICgpID0+IHtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBuZXdMaXN0ID0gbmV3TGlzdC5jb25jYXQodGhpcy5fZ2V0RGF0YShwYWdlKSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtuZXdMaXN0IDogbmV3TGlzdH0sICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0sIDgwMCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG5cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICBsZXQgeyBuZXdMaXN0IH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicy1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFkZGluZ1wiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPE15U2Nyb2xsXHJcbiAgICAgICAgICAgICAgICAgICAgdXBUZXh0PVwic2hhbmcgaHVhXCJcclxuICAgICAgICAgICAgICAgICAgICBkb3duVGV4dD1cIuS4iyBsYVwiXHJcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ1RleHQ9XCLlv6vngrnlh7rmnaXllYrjgILjgILjgIJcIlxyXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlVGV4dD1cIuWKoOi9veWujOaIkOWSr1wiXHJcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGU9e25ld0xpc3QubGVuZ3RoIDwgMzB9XHJcbiAgICAgICAgICAgICAgICAgICAgb25QdWxsTG9hZD17dGhpcy5vblB1bGxMb2FkfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uUmVmcmVzaD17dGhpcy5vblJlZnJlc2h9PlxyXG4gICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJzY3JvbGwtY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdMaXN0Lm1hcCgobCwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKDxsaSBrZXk9eydsJytpbmRleH0+bGkge2x9PC9saT4pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICAgICAgICA8L015U2Nyb2xsPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG59KTtcclxuXHJcblJlYWN0RE9NLnJlbmRlcihcclxuICAgIDxBcHAgLz4sXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2xpZGVyJylcclxuKTtcclxuXHJcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vZW50cnkvYXBwLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},1:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(4)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZS9zdHlsZS5jc3M/NjNlMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUFnSDtBQUNoSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLy4uL25vZGVfbW9kdWxlcy8ubnBtaW5zdGFsbC9jc3MtbG9hZGVyLzAuMjMuMS9jc3MtbG9hZGVyL2luZGV4LmpzIS4vc3R5bGUuY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLy4uL25vZGVfbW9kdWxlcy8ubnBtaW5zdGFsbC9zdHlsZS1sb2FkZXIvMC4xMy4xL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLy4uL25vZGVfbW9kdWxlcy8ubnBtaW5zdGFsbC9jc3MtbG9hZGVyLzAuMjMuMS9jc3MtbG9hZGVyL2luZGV4LmpzIS4vc3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLy4uL25vZGVfbW9kdWxlcy8ubnBtaW5zdGFsbC9jc3MtbG9hZGVyLzAuMjMuMS9jc3MtbG9hZGVyL2luZGV4LmpzIS4vc3R5bGUuY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3R5bGUvc3R5bGUuY3NzXG4gKiogbW9kdWxlIGlkID0gMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},2:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(3)();\n// imports\n\n\n// module\nexports.push([module.id, ".my-scroll{width:100%;height:100%}.react-iscroll .iscroll-pull-down>i,.react-iscroll .iscroll-pull-up>i{width:20px;height:20px;background-size:20px 40px}.react-iscroll .iscroll-pull-down.scrolled-up{margin-top:-31px}.iscroll-pull-up,.react-iscroll .iscroll-pull-down{color:#000}.s-container{overflow:hidden}.padding{background-color:#2eedf2;padding:20px 0}.s-container .scroll-content>li{padding:30px 0;text-align:center;border-bottom:1px solid #ccc}", ""]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZS9zdHlsZS5jc3M/ODlmMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFHQTtBQUNBLHFDQUFxQyxXQUFXLFlBQVksc0VBQXNFLFdBQVcsWUFBWSwwQkFBMEIsOENBQThDLGlCQUFpQixtREFBbUQsV0FBVyxhQUFhLGdCQUFnQixTQUFTLHlCQUF5QixlQUFlLGdDQUFnQyxlQUFlLGtCQUFrQiw2QkFBNkI7O0FBRTVkIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi9ub2RlX21vZHVsZXMvLm5wbWluc3RhbGwvY3NzLWxvYWRlci8wLjIzLjEvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5teS1zY3JvbGx7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX0ucmVhY3QtaXNjcm9sbCAuaXNjcm9sbC1wdWxsLWRvd24+aSwucmVhY3QtaXNjcm9sbCAuaXNjcm9sbC1wdWxsLXVwPml7d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtiYWNrZ3JvdW5kLXNpemU6MjBweCA0MHB4fS5yZWFjdC1pc2Nyb2xsIC5pc2Nyb2xsLXB1bGwtZG93bi5zY3JvbGxlZC11cHttYXJnaW4tdG9wOi0zMXB4fS5pc2Nyb2xsLXB1bGwtdXAsLnJlYWN0LWlzY3JvbGwgLmlzY3JvbGwtcHVsbC1kb3due2NvbG9yOiMwMDB9LnMtY29udGFpbmVye292ZXJmbG93OmhpZGRlbn0ucGFkZGluZ3tiYWNrZ3JvdW5kLWNvbG9yOiMyZWVkZjI7cGFkZGluZzoyMHB4IDB9LnMtY29udGFpbmVyIC5zY3JvbGwtY29udGVudD5saXtwYWRkaW5nOjMwcHggMDt0ZXh0LWFsaWduOmNlbnRlcjtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjY2NjfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+Ly5ucG1pbnN0YWxsL2Nzcy1sb2FkZXIvMC4yMy4xL2Nzcy1sb2FkZXIhLi9zdHlsZS9zdHlsZS5jc3NcbiAqKiBtb2R1bGUgaWQgPSAyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},3:function(module,exports){eval('"use strict";\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n// css base code, injected by the css-loader\nmodule.exports = function () {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif (item[2]) {\n\t\t\t\tresult.push("@media " + item[2] + "{" + item[1] + "}");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function (modules, mediaQuery) {\n\t\tif (typeof modules === "string") modules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif (typeof id === "number") alreadyImportedModules[id] = true;\n\t\t}\n\t\tfor (i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif (mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if (mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+Ly5ucG1pbnN0YWxsL2Nzcy1sb2FkZXIvMC4yMy4xL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzPzJiZmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUlBO0FBQ0EsT0FBTyxPQUFQLEdBQWlCLFlBQVc7QUFDM0IsS0FBSSxPQUFPLEVBQVg7O0FBRUE7QUFDQSxNQUFLLFFBQUwsR0FBZ0IsU0FBUyxRQUFULEdBQW9CO0FBQ25DLE1BQUksU0FBUyxFQUFiO0FBQ0EsT0FBSSxJQUFJLElBQUksQ0FBWixFQUFlLElBQUksS0FBSyxNQUF4QixFQUFnQyxHQUFoQyxFQUFxQztBQUNwQyxPQUFJLE9BQU8sS0FBSyxDQUFMLENBQVg7QUFDQSxPQUFHLEtBQUssQ0FBTCxDQUFILEVBQVk7QUFDWCxXQUFPLElBQVAsQ0FBWSxZQUFZLEtBQUssQ0FBTCxDQUFaLEdBQXNCLEdBQXRCLEdBQTRCLEtBQUssQ0FBTCxDQUE1QixHQUFzQyxHQUFsRDtBQUNBLElBRkQsTUFFTztBQUNOLFdBQU8sSUFBUCxDQUFZLEtBQUssQ0FBTCxDQUFaO0FBQ0E7QUFDRDtBQUNELFNBQU8sT0FBTyxJQUFQLENBQVksRUFBWixDQUFQO0FBQ0EsRUFYRDs7QUFhQTtBQUNBLE1BQUssQ0FBTCxHQUFTLFVBQVMsT0FBVCxFQUFrQixVQUFsQixFQUE4QjtBQUN0QyxNQUFHLE9BQU8sT0FBUCxLQUFtQixRQUF0QixFQUNDLFVBQVUsQ0FBQyxDQUFDLElBQUQsRUFBTyxPQUFQLEVBQWdCLEVBQWhCLENBQUQsQ0FBVjtBQUNELE1BQUkseUJBQXlCLEVBQTdCO0FBQ0EsT0FBSSxJQUFJLElBQUksQ0FBWixFQUFlLElBQUksS0FBSyxNQUF4QixFQUFnQyxHQUFoQyxFQUFxQztBQUNwQyxPQUFJLEtBQUssS0FBSyxDQUFMLEVBQVEsQ0FBUixDQUFUO0FBQ0EsT0FBRyxPQUFPLEVBQVAsS0FBYyxRQUFqQixFQUNDLHVCQUF1QixFQUF2QixJQUE2QixJQUE3QjtBQUNEO0FBQ0QsT0FBSSxJQUFJLENBQVIsRUFBVyxJQUFJLFFBQVEsTUFBdkIsRUFBK0IsR0FBL0IsRUFBb0M7QUFDbkMsT0FBSSxPQUFPLFFBQVEsQ0FBUixDQUFYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFHLE9BQU8sS0FBSyxDQUFMLENBQVAsS0FBbUIsUUFBbkIsSUFBK0IsQ0FBQyx1QkFBdUIsS0FBSyxDQUFMLENBQXZCLENBQW5DLEVBQW9FO0FBQ25FLFFBQUcsY0FBYyxDQUFDLEtBQUssQ0FBTCxDQUFsQixFQUEyQjtBQUMxQixVQUFLLENBQUwsSUFBVSxVQUFWO0FBQ0EsS0FGRCxNQUVPLElBQUcsVUFBSCxFQUFlO0FBQ3JCLFVBQUssQ0FBTCxJQUFVLE1BQU0sS0FBSyxDQUFMLENBQU4sR0FBZ0IsU0FBaEIsR0FBNEIsVUFBNUIsR0FBeUMsR0FBbkQ7QUFDQTtBQUNELFNBQUssSUFBTCxDQUFVLElBQVY7QUFDQTtBQUNEO0FBQ0QsRUF4QkQ7QUF5QkEsUUFBTyxJQUFQO0FBQ0EsQ0E1Q0QiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIGxpc3QgPSBbXTtcclxuXHJcblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblxyXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXHJcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcclxuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xyXG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXHJcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XHJcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcclxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcclxuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cclxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcclxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcclxuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiBsaXN0O1xyXG59O1xyXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL34vLm5wbWluc3RhbGwvY3NzLWxvYWRlci8wLjIzLjEvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},4:function(module,exports,__webpack_require__){eval('/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName("head")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(false) {\r\n\t\tif(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === "undefined") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === "undefined") options.insertAt = "bottom";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === "top") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === "bottom") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error("Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement("style");\r\n\tstyleElement.type = "text/css";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement("link");\r\n\tlinkElement.rel = "stylesheet";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === "function" &&\r\n\t\ttypeof URL.createObjectURL === "function" &&\r\n\t\ttypeof URL.revokeObjectURL === "function" &&\r\n\t\ttypeof Blob === "function" &&\r\n\t\ttypeof btoa === "function") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? "" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute("media", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: "text/css" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},179:function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n__webpack_require__(180);\n\nvar _react = __webpack_require__(5);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(39);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _iscrollProbe = __webpack_require__(182);\n\nvar _iscrollProbe2 = _interopRequireDefault(_iscrollProbe);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * Created by Ryn on 2016/8/8.\r\n * 上下滑动组件\r\n */\n\nvar MyScroll = _react2.default.createClass({\n    displayName: 'MyScroll',\n\n\n    /**\r\n     * 组件初始化状态\r\n     * @returns {{myScroll: null, wrapperHeight: string}}\r\n     */\n    getInitialState: function getInitialState() {\n        return {\n            myScroll: null,\n            wrapperHeight: '100%',\n            downTag: false,\n            downText: '下拉刷新',\n            upTag: false,\n            upText: '上划加载更多',\n            loadingText: \"正在加载中\",\n            completeText: \"没有数据咯\",\n            downShowText: '下拉刷新',\n            upShowText: '上划加载更多',\n            loadingStep: 0,\n            defaultOptions: {\n                probeType: 2, //probeType：1对性能没有影响。在滚动事件被触发时，滚动轴是不是忙着做它的东西。probeType：2总执行滚动，除了势头，反弹过程中的事件。这类似于原生的onscroll事件。probeType：3发出的滚动事件与到的像素精度。注意，滚动被迫requestAnimationFrame（即：useTransition：假）。\n                scrollbars: false, //有滚动条\n                mouseWheel: true, //允许滑轮滚动\n                fadeScrollbars: true, //滚动时显示滚动条，默认影藏，并且是淡出淡入效果\n                bounce: true, //边界反弹\n                interactiveScrollbars: true, //滚动条可以拖动\n                shrinkScrollbars: 'scale', // 当滚动边界之外的滚动条是由少量的收缩。'clip' or 'scale'.\n                click: true, // 允许点击事件\n                keyBindings: true, //允许使用按键控制\n                momentum: true // 允许有惯性滑动\n            }\n        };\n    },\n\n\n    /**\r\n     * 下拉刷新\r\n     */\n    refresh: function refresh() {\n        var _this2 = this;\n\n        var _state = this.state;\n        var myScroll = _state.myScroll;\n        var loadingStep = _state.loadingStep;\n        var downText = _state.downText;\n\n\n        this.props.onRefresh(function () {\n            if (loadingStep === 2) {\n                myScroll.refresh();\n            }\n            _this2.setState({ downTag: false, downShowText: downText, loadingStep: 0 });\n        });\n    },\n\n\n    /**\r\n     * 上拉加载\r\n     */\n    pullLoad: function pullLoad() {\n        var _this3 = this;\n\n        var infinite = this.props.infinite;\n        var _state2 = this.state;\n        var myScroll = _state2.myScroll;\n        var loadingStep = _state2.loadingStep;\n\n        this.props.onPullLoad(function () {\n            if (infinite) {\n                if (loadingStep === 2) {\n                    myScroll.refresh();\n                }\n                _this3.setState({ upTag: false, loadingStep: 0 });\n            }\n        });\n    },\n\n\n    /**\r\n     * 滑动开始之前\r\n     * @param _this1\r\n     */\n    beforeScrollStart: function beforeScrollStart(_this1) {\n        // TODO\n    },\n\n\n    /**\r\n     * 滑动开始\r\n     * @param _this1\r\n     */\n    scrollStart: function scrollStart(_this1) {\n        // TODO\n    },\n\n\n    /**\r\n     * 滑动结束\r\n     * @param _this1\r\n     */\n    scrollEnd: function scrollEnd(_this1) {\n        var _this4 = this;\n\n        var _state3 = this.state;\n        var loadingStep = _state3.loadingStep;\n        var loadingText = _state3.loadingText;\n\n\n        if (loadingStep === 1) {\n            this.setState({\n                downShowText: loadingText,\n                loadingStep: 2\n            }, function () {\n                if (_this1.y >= 0) {\n                    _this4.refresh();\n                }\n\n                if (_this1.y < 0) {\n                    _this4.pullLoad();\n                }\n            });\n        }\n    },\n\n\n    /**\r\n     * 滑动中\r\n     * @param _this1\r\n     */\n    scroll: function scroll(_this1) {\n        var _state4 = this.state;\n        var downTag = _state4.downTag;\n        var upTag = _state4.upTag;\n        var downText = _state4.downText;\n        var upText = _state4.upText;\n        var offset_y = _this1.y;\n\n        // 下拉刷新过程\n        if (offset_y > 5) {\n            this.setState({\n                downTag: true,\n                loadingStep: 1,\n                downShowText: downText\n            });\n        }\n\n        // 上拉加载过程\n        if (offset_y < _this1.maxScrollY - 5) {\n            this.setState({\n                upTag: true,\n                loadingStep: 1,\n                upShowText: upText\n            });\n        }\n    },\n\n\n    /**\r\n     * 初始化iscroll\r\n     * @private\r\n     */\n    _initScroll: function _initScroll() {\n        var _state5 = this.state;\n        var myScroll = _state5.myScroll;\n        var defaultOptions = _state5.defaultOptions;\n        var options = this.props.options;\n        var scrollElement = _reactDom2.default.findDOMNode(this.refs.scroll_wrapper);\n        var opts = Object.assign({}, defaultOptions, options);\n        var _this = this;\n\n        /**\r\n         * 如果不存在myScroll实例，则实例化\r\n         */\n        if (!myScroll) {\n            myScroll = new _iscrollProbe2.default(scrollElement, opts);\n        }\n\n        /**\r\n         * 监听iscroll beforeScrollStart事件\r\n         */\n        myScroll.on('beforeScrollStart', function () {\n            _this.beforeScrollStart(this);\n        });\n\n        /**\r\n         * 监听iscroll scrollStart事件\r\n         */\n        myScroll.on('scrollStart', function () {\n            _this.scrollStart(this);\n        });\n\n        // 监听iscroll scrollEnd事件\n        myScroll.on('scrollEnd', function () {\n            _this.scrollEnd(this);\n        });\n\n        myScroll.on('scroll', function () {\n            _this.scroll(this);\n        });\n\n        this.setState({ myScroll: myScroll });\n    },\n\n\n    /**\r\n     * 初始化wrapper高度\r\n     * @private\r\n     */\n    _initWrapperHeight: function _initWrapperHeight() {\n        var _this5 = this;\n\n        var wrapperElement = _reactDom2.default.findDOMNode(this.refs.scroll_wrapper),\n            bodyElementHeight = document.documentElement.clientHeight || document.body.clientHeight,\n            wrapperHeight = void 0;\n\n        wrapperHeight = bodyElementHeight - wrapperElement.offsetTop;\n        this.setState({ wrapperHeight: wrapperHeight + 'px' }, function () {\n\n            /**\r\n             * slider高度设置完成之后才能初始化scroll\r\n             * 避免不能滑动\r\n             */\n\n            _this5._initScroll();\n        });\n    },\n\n\n    /**\r\n     * 初始化scroll文字\r\n     * @private\r\n     */\n    _initScrollText: function _initScrollText() {\n        var _props = this.props;\n        var upText = _props.upText;\n        var downText = _props.downText;\n        var loadingText = _props.loadingText;\n        var completeText = _props.completeText;\n\n\n        this.setState({\n            upShowText: upText || this.state.upText,\n            downShowText: downText || this.state.downText,\n            downText: downText || this.state.downText,\n            upText: upText || this.state.upText,\n            loadingText: loadingText || this.state.loadingText,\n            completeText: completeText || this.state.completeText\n        });\n    },\n    componentDidMount: function componentDidMount() {\n        // 初始化wrapper高度\n        this._initWrapperHeight();\n\n        // 初始化scroll文字\n        this._initScrollText();\n    },\n    render: function render() {\n        var _state6 = this.state;\n        var wrapperHeight = _state6.wrapperHeight;\n        var downTag = _state6.downTag;\n        var downShowText = _state6.downShowText;\n        var upTag = _state6.upTag;\n        var upShowText = _state6.upShowText;\n        var completeText = _state6.completeText;\n        var infinite = this.props.infinite;\n\n\n        return _react2.default.createElement(\n            'div',\n            { className: 'scroll-wrapper', ref: 'scroll_wrapper', style: { height: wrapperHeight } },\n            _react2.default.createElement(\n                'div',\n                { className: 'scroll' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'down-refresh', style: downTag ? { display: '' } : { display: 'none' } },\n                    downShowText\n                ),\n                this.props.children,\n                _react2.default.createElement(\n                    'div',\n                    { className: 'up-load', style: upTag ? { display: '' } : { display: 'none' } },\n                    infinite ? upShowText : completeText\n                )\n            )\n        );\n    }\n});\n\nexports.default = MyScroll;//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},180:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(181);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(4)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js!./scroll.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/.npminstall/css-loader/0.23.1/css-loader/index.js!./scroll.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZS9zY3JvbGwuY3NzPzU0NzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBZ0g7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwiZmlsZSI6IjE4MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLy4uL25vZGVfbW9kdWxlcy8ubnBtaW5zdGFsbC9jc3MtbG9hZGVyLzAuMjMuMS9jc3MtbG9hZGVyL2luZGV4LmpzIS4vc2Nyb2xsLmNzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi8uLi9ub2RlX21vZHVsZXMvLm5wbWluc3RhbGwvc3R5bGUtbG9hZGVyLzAuMTMuMS9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIHt9KTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi8uLi9ub2RlX21vZHVsZXMvLm5wbWluc3RhbGwvY3NzLWxvYWRlci8wLjIzLjEvY3NzLWxvYWRlci9pbmRleC5qcyEuL3Njcm9sbC5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vbm9kZV9tb2R1bGVzLy5ucG1pbnN0YWxsL2Nzcy1sb2FkZXIvMC4yMy4xL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zY3JvbGwuY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3R5bGUvc2Nyb2xsLmNzc1xuICoqIG1vZHVsZSBpZCA9IDE4MFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},181:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(3)();\n// imports\n\n\n// module\nexports.push([module.id, ".scroll-wrapper{width:100%;position:relative;overflow:hidden}.scroll{width:100%;background-color:#fff}.down-refresh,.up-load{background-color:#ccc;width:100%;text-align:center;padding:10px 0;font-size:12px}", ""]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZS9zY3JvbGwuY3NzPzQwMGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSwwQ0FBMEMsV0FBVyxrQkFBa0IsZ0JBQWdCLFFBQVEsV0FBVyxzQkFBc0IsdUJBQXVCLHNCQUFzQixXQUFXLGtCQUFrQixlQUFlLGVBQWU7O0FBRXhPIiwiZmlsZSI6IjE4MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uL25vZGVfbW9kdWxlcy8ubnBtaW5zdGFsbC9jc3MtbG9hZGVyLzAuMjMuMS9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnNjcm9sbC13cmFwcGVye3dpZHRoOjEwMCU7cG9zaXRpb246cmVsYXRpdmU7b3ZlcmZsb3c6aGlkZGVufS5zY3JvbGx7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmRvd24tcmVmcmVzaCwudXAtbG9hZHtiYWNrZ3JvdW5kLWNvbG9yOiNjY2M7d2lkdGg6MTAwJTt0ZXh0LWFsaWduOmNlbnRlcjtwYWRkaW5nOjEwcHggMDtmb250LXNpemU6MTJweH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi8ubnBtaW5zdGFsbC9jc3MtbG9hZGVyLzAuMjMuMS9jc3MtbG9hZGVyIS4vc3R5bGUvc2Nyb2xsLmNzc1xuICoqIG1vZHVsZSBpZCA9IDE4MVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},182:function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/*! iScroll v5.2.0 ~ (c) 2008-2016 Matteo Spinelli ~ http://cubiq.org/license */\n(function (window, document, Math) {\n\tvar rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n\t\twindow.setTimeout(callback, 1000 / 60);\n\t};\n\n\tvar utils = function () {\n\t\tvar me = {};\n\n\t\tvar _elementStyle = document.createElement('div').style;\n\t\tvar _vendor = function () {\n\t\t\tvar vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\n\t\t\t    transform,\n\t\t\t    i = 0,\n\t\t\t    l = vendors.length;\n\n\t\t\tfor (; i < l; i++) {\n\t\t\t\ttransform = vendors[i] + 'ransform';\n\t\t\t\tif (transform in _elementStyle) return vendors[i].substr(0, vendors[i].length - 1);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}();\n\n\t\tfunction _prefixStyle(style) {\n\t\t\tif (_vendor === false) return false;\n\t\t\tif (_vendor === '') return style;\n\t\t\treturn _vendor + style.charAt(0).toUpperCase() + style.substr(1);\n\t\t}\n\n\t\tme.getTime = Date.now || function getTime() {\n\t\t\treturn new Date().getTime();\n\t\t};\n\n\t\tme.extend = function (target, obj) {\n\t\t\tfor (var i in obj) {\n\t\t\t\ttarget[i] = obj[i];\n\t\t\t}\n\t\t};\n\n\t\tme.addEvent = function (el, type, fn, capture) {\n\t\t\tel.addEventListener(type, fn, !!capture);\n\t\t};\n\n\t\tme.removeEvent = function (el, type, fn, capture) {\n\t\t\tel.removeEventListener(type, fn, !!capture);\n\t\t};\n\n\t\tme.prefixPointerEvent = function (pointerEvent) {\n\t\t\treturn window.MSPointerEvent ? 'MSPointer' + pointerEvent.charAt(7).toUpperCase() + pointerEvent.substr(8) : pointerEvent;\n\t\t};\n\n\t\tme.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {\n\t\t\tvar distance = current - start,\n\t\t\t    speed = Math.abs(distance) / time,\n\t\t\t    destination,\n\t\t\t    duration;\n\n\t\t\tdeceleration = deceleration === undefined ? 0.0006 : deceleration;\n\n\t\t\tdestination = current + speed * speed / (2 * deceleration) * (distance < 0 ? -1 : 1);\n\t\t\tduration = speed / deceleration;\n\n\t\t\tif (destination < lowerMargin) {\n\t\t\t\tdestination = wrapperSize ? lowerMargin - wrapperSize / 2.5 * (speed / 8) : lowerMargin;\n\t\t\t\tdistance = Math.abs(destination - current);\n\t\t\t\tduration = distance / speed;\n\t\t\t} else if (destination > 0) {\n\t\t\t\tdestination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;\n\t\t\t\tdistance = Math.abs(current) + destination;\n\t\t\t\tduration = distance / speed;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdestination: Math.round(destination),\n\t\t\t\tduration: duration\n\t\t\t};\n\t\t};\n\n\t\tvar _transform = _prefixStyle('transform');\n\n\t\tme.extend(me, {\n\t\t\thasTransform: _transform !== false,\n\t\t\thasPerspective: _prefixStyle('perspective') in _elementStyle,\n\t\t\thasTouch: 'ontouchstart' in window,\n\t\t\thasPointer: !!(window.PointerEvent || window.MSPointerEvent), // IE10 is prefixed\n\t\t\thasTransition: _prefixStyle('transition') in _elementStyle\n\t\t});\n\n\t\t/*\n  This should find all Android browsers lower than build 535.19 (both stock browser and webview)\n  - galaxy S2 is ok\n     - 2.3.6 : `AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1`\n     - 4.0.4 : `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\n    - galaxy S3 is badAndroid (stock brower, webview)\n      `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\n    - galaxy S4 is badAndroid (stock brower, webview)\n      `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`\n    - galaxy S5 is OK\n      `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`\n    - galaxy S6 is OK\n      `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`\n   */\n\t\tme.isBadAndroid = function () {\n\t\t\tvar appVersion = window.navigator.appVersion;\n\t\t\t// Android browser is not a chrome browser.\n\t\t\tif (/Android/.test(appVersion) && !/Chrome\\/\\d/.test(appVersion)) {\n\t\t\t\tvar safariVersion = appVersion.match(/Safari\\/(\\d+.\\d)/);\n\t\t\t\tif (safariVersion && (typeof safariVersion === 'undefined' ? 'undefined' : _typeof(safariVersion)) === \"object\" && safariVersion.length >= 2) {\n\t\t\t\t\treturn parseFloat(safariVersion[1]) < 535.19;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}();\n\n\t\tme.extend(me.style = {}, {\n\t\t\ttransform: _transform,\n\t\t\ttransitionTimingFunction: _prefixStyle('transitionTimingFunction'),\n\t\t\ttransitionDuration: _prefixStyle('transitionDuration'),\n\t\t\ttransitionDelay: _prefixStyle('transitionDelay'),\n\t\t\ttransformOrigin: _prefixStyle('transformOrigin')\n\t\t});\n\n\t\tme.hasClass = function (e, c) {\n\t\t\tvar re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\");\n\t\t\treturn re.test(e.className);\n\t\t};\n\n\t\tme.addClass = function (e, c) {\n\t\t\tif (me.hasClass(e, c)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar newclass = e.className.split(' ');\n\t\t\tnewclass.push(c);\n\t\t\te.className = newclass.join(' ');\n\t\t};\n\n\t\tme.removeClass = function (e, c) {\n\t\t\tif (!me.hasClass(e, c)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\", 'g');\n\t\t\te.className = e.className.replace(re, ' ');\n\t\t};\n\n\t\tme.offset = function (el) {\n\t\t\tvar left = -el.offsetLeft,\n\t\t\t    top = -el.offsetTop;\n\n\t\t\t// jshint -W084\n\t\t\twhile (el = el.offsetParent) {\n\t\t\t\tleft -= el.offsetLeft;\n\t\t\t\ttop -= el.offsetTop;\n\t\t\t}\n\t\t\t// jshint +W084\n\n\t\t\treturn {\n\t\t\t\tleft: left,\n\t\t\t\ttop: top\n\t\t\t};\n\t\t};\n\n\t\tme.preventDefaultException = function (el, exceptions) {\n\t\t\tfor (var i in exceptions) {\n\t\t\t\tif (exceptions[i].test(el[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tme.extend(me.eventType = {}, {\n\t\t\ttouchstart: 1,\n\t\t\ttouchmove: 1,\n\t\t\ttouchend: 1,\n\n\t\t\tmousedown: 2,\n\t\t\tmousemove: 2,\n\t\t\tmouseup: 2,\n\n\t\t\tpointerdown: 3,\n\t\t\tpointermove: 3,\n\t\t\tpointerup: 3,\n\n\t\t\tMSPointerDown: 3,\n\t\t\tMSPointerMove: 3,\n\t\t\tMSPointerUp: 3\n\t\t});\n\n\t\tme.extend(me.ease = {}, {\n\t\t\tquadratic: {\n\t\t\t\tstyle: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n\t\t\t\tfn: function fn(k) {\n\t\t\t\t\treturn k * (2 - k);\n\t\t\t\t}\n\t\t\t},\n\t\t\tcircular: {\n\t\t\t\tstyle: 'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly \"circular\" but this looks better, it should be (0.075, 0.82, 0.165, 1)\n\t\t\t\tfn: function fn(k) {\n\t\t\t\t\treturn Math.sqrt(1 - --k * k);\n\t\t\t\t}\n\t\t\t},\n\t\t\tback: {\n\t\t\t\tstyle: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n\t\t\t\tfn: function fn(k) {\n\t\t\t\t\tvar b = 4;\n\t\t\t\t\treturn (k = k - 1) * k * ((b + 1) * k + b) + 1;\n\t\t\t\t}\n\t\t\t},\n\t\t\tbounce: {\n\t\t\t\tstyle: '',\n\t\t\t\tfn: function fn(k) {\n\t\t\t\t\tif ((k /= 1) < 1 / 2.75) {\n\t\t\t\t\t\treturn 7.5625 * k * k;\n\t\t\t\t\t} else if (k < 2 / 2.75) {\n\t\t\t\t\t\treturn 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n\t\t\t\t\t} else if (k < 2.5 / 2.75) {\n\t\t\t\t\t\treturn 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\telastic: {\n\t\t\t\tstyle: '',\n\t\t\t\tfn: function fn(k) {\n\t\t\t\t\tvar f = 0.22,\n\t\t\t\t\t    e = 0.4;\n\n\t\t\t\t\tif (k === 0) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (k == 1) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn e * Math.pow(2, -10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tme.tap = function (e, eventName) {\n\t\t\tvar ev = document.createEvent('Event');\n\t\t\tev.initEvent(eventName, true, true);\n\t\t\tev.pageX = e.pageX;\n\t\t\tev.pageY = e.pageY;\n\t\t\te.target.dispatchEvent(ev);\n\t\t};\n\n\t\tme.click = function (e) {\n\t\t\tvar target = e.target,\n\t\t\t    ev;\n\n\t\t\tif (!/(SELECT|INPUT|TEXTAREA)/i.test(target.tagName)) {\n\t\t\t\tev = document.createEvent('MouseEvents');\n\t\t\t\tev.initMouseEvent('click', true, true, e.view, 1, target.screenX, target.screenY, target.clientX, target.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, 0, null);\n\n\t\t\t\tev._constructed = true;\n\t\t\t\ttarget.dispatchEvent(ev);\n\t\t\t}\n\t\t};\n\n\t\treturn me;\n\t}();\n\tfunction IScroll(el, options) {\n\t\tthis.wrapper = typeof el == 'string' ? document.querySelector(el) : el;\n\t\tthis.scroller = this.wrapper.children[0];\n\t\tthis.scrollerStyle = this.scroller.style; // cache style for better performance\n\n\t\tthis.options = {\n\n\t\t\tresizeScrollbars: true,\n\n\t\t\tmouseWheelSpeed: 20,\n\n\t\t\tsnapThreshold: 0.334,\n\n\t\t\t// INSERT POINT: OPTIONS\n\t\t\tdisablePointer: !utils.hasPointer,\n\t\t\tdisableTouch: utils.hasPointer || !utils.hasTouch,\n\t\t\tdisableMouse: utils.hasPointer || utils.hasTouch,\n\t\t\tstartX: 0,\n\t\t\tstartY: 0,\n\t\t\tscrollY: true,\n\t\t\tdirectionLockThreshold: 5,\n\t\t\tmomentum: true,\n\n\t\t\tbounce: true,\n\t\t\tbounceTime: 600,\n\t\t\tbounceEasing: '',\n\n\t\t\tpreventDefault: true,\n\t\t\tpreventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },\n\n\t\t\tHWCompositing: true,\n\t\t\tuseTransition: true,\n\t\t\tuseTransform: true,\n\t\t\tbindToWrapper: typeof window.onmousedown === \"undefined\"\n\t\t};\n\n\t\tfor (var i in options) {\n\t\t\tthis.options[i] = options[i];\n\t\t}\n\n\t\t// Normalize options\n\t\tthis.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';\n\n\t\tthis.options.useTransition = utils.hasTransition && this.options.useTransition;\n\t\tthis.options.useTransform = utils.hasTransform && this.options.useTransform;\n\n\t\tthis.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;\n\t\tthis.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;\n\n\t\t// If you want eventPassthrough I have to lock one of the axes\n\t\tthis.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;\n\t\tthis.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;\n\n\t\t// With eventPassthrough we also need lockDirection mechanism\n\t\tthis.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;\n\t\tthis.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;\n\n\t\tthis.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;\n\n\t\tthis.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;\n\n\t\tif (this.options.tap === true) {\n\t\t\tthis.options.tap = 'tap';\n\t\t}\n\n\t\tif (this.options.shrinkScrollbars == 'scale') {\n\t\t\tthis.options.useTransition = false;\n\t\t}\n\n\t\tthis.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;\n\n\t\tif (this.options.probeType == 3) {\n\t\t\tthis.options.useTransition = false;\n\t\t}\n\n\t\t// INSERT POINT: NORMALIZATION\n\n\t\t// Some defaults\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.directionX = 0;\n\t\tthis.directionY = 0;\n\t\tthis._events = {};\n\n\t\t// INSERT POINT: DEFAULTS\n\n\t\tthis._init();\n\t\tthis.refresh();\n\n\t\tthis.scrollTo(this.options.startX, this.options.startY);\n\t\tthis.enable();\n\t}\n\n\tIScroll.prototype = {\n\t\tversion: '5.2.0',\n\n\t\t_init: function _init() {\n\t\t\tthis._initEvents();\n\n\t\t\tif (this.options.scrollbars || this.options.indicators) {\n\t\t\t\tthis._initIndicators();\n\t\t\t}\n\n\t\t\tif (this.options.mouseWheel) {\n\t\t\t\tthis._initWheel();\n\t\t\t}\n\n\t\t\tif (this.options.snap) {\n\t\t\t\tthis._initSnap();\n\t\t\t}\n\n\t\t\tif (this.options.keyBindings) {\n\t\t\t\tthis._initKeys();\n\t\t\t}\n\n\t\t\t// INSERT POINT: _init\n\t\t},\n\n\t\tdestroy: function destroy() {\n\t\t\tthis._initEvents(true);\n\t\t\tclearTimeout(this.resizeTimeout);\n\t\t\tthis.resizeTimeout = null;\n\t\t\tthis._execEvent('destroy');\n\t\t},\n\n\t\t_transitionEnd: function _transitionEnd(e) {\n\t\t\tif (e.target != this.scroller || !this.isInTransition) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._transitionTime();\n\t\t\tif (!this.resetPosition(this.options.bounceTime)) {\n\t\t\t\tthis.isInTransition = false;\n\t\t\t\tthis._execEvent('scrollEnd');\n\t\t\t}\n\t\t},\n\n\t\t_start: function _start(e) {\n\t\t\t// React to left mouse button only\n\t\t\tif (utils.eventType[e.type] != 1) {\n\t\t\t\t// for button property\n\t\t\t\t// http://unixpapa.com/js/mouse.html\n\t\t\t\tvar button;\n\t\t\t\tif (!e.which) {\n\t\t\t\t\t/* IE case */\n\t\t\t\t\tbutton = e.button < 2 ? 0 : e.button == 4 ? 1 : 2;\n\t\t\t\t} else {\n\t\t\t\t\t/* All others */\n\t\t\t\t\tbutton = e.button;\n\t\t\t\t}\n\t\t\t\tif (button !== 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.enabled || this.initiated && utils.eventType[e.type] !== this.initiated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\t    pos;\n\n\t\t\tthis.initiated = utils.eventType[e.type];\n\t\t\tthis.moved = false;\n\t\t\tthis.distX = 0;\n\t\t\tthis.distY = 0;\n\t\t\tthis.directionX = 0;\n\t\t\tthis.directionY = 0;\n\t\t\tthis.directionLocked = 0;\n\n\t\t\tthis.startTime = utils.getTime();\n\n\t\t\tif (this.options.useTransition && this.isInTransition) {\n\t\t\t\tthis._transitionTime();\n\t\t\t\tthis.isInTransition = false;\n\t\t\t\tpos = this.getComputedPosition();\n\t\t\t\tthis._translate(Math.round(pos.x), Math.round(pos.y));\n\t\t\t\tthis._execEvent('scrollEnd');\n\t\t\t} else if (!this.options.useTransition && this.isAnimating) {\n\t\t\t\tthis.isAnimating = false;\n\t\t\t\tthis._execEvent('scrollEnd');\n\t\t\t}\n\n\t\t\tthis.startX = this.x;\n\t\t\tthis.startY = this.y;\n\t\t\tthis.absStartX = this.x;\n\t\t\tthis.absStartY = this.y;\n\t\t\tthis.pointX = point.pageX;\n\t\t\tthis.pointY = point.pageY;\n\n\t\t\tthis._execEvent('beforeScrollStart');\n\t\t},\n\n\t\t_move: function _move(e) {\n\t\t\tif (!this.enabled || utils.eventType[e.type] !== this.initiated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.preventDefault) {\n\t\t\t\t// increases performance on Android? TODO: check!\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\t    deltaX = point.pageX - this.pointX,\n\t\t\t    deltaY = point.pageY - this.pointY,\n\t\t\t    timestamp = utils.getTime(),\n\t\t\t    newX,\n\t\t\t    newY,\n\t\t\t    absDistX,\n\t\t\t    absDistY;\n\n\t\t\tthis.pointX = point.pageX;\n\t\t\tthis.pointY = point.pageY;\n\n\t\t\tthis.distX += deltaX;\n\t\t\tthis.distY += deltaY;\n\t\t\tabsDistX = Math.abs(this.distX);\n\t\t\tabsDistY = Math.abs(this.distY);\n\n\t\t\t// We need to move at least 10 pixels for the scrolling to initiate\n\t\t\tif (timestamp - this.endTime > 300 && absDistX < 10 && absDistY < 10) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If you are scrolling in one direction lock the other\n\t\t\tif (!this.directionLocked && !this.options.freeScroll) {\n\t\t\t\tif (absDistX > absDistY + this.options.directionLockThreshold) {\n\t\t\t\t\tthis.directionLocked = 'h'; // lock horizontally\n\t\t\t\t} else if (absDistY >= absDistX + this.options.directionLockThreshold) {\n\t\t\t\t\tthis.directionLocked = 'v'; // lock vertically\n\t\t\t\t} else {\n\t\t\t\t\tthis.directionLocked = 'n'; // no lock\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.directionLocked == 'h') {\n\t\t\t\tif (this.options.eventPassthrough == 'vertical') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else if (this.options.eventPassthrough == 'horizontal') {\n\t\t\t\t\tthis.initiated = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdeltaY = 0;\n\t\t\t} else if (this.directionLocked == 'v') {\n\t\t\t\tif (this.options.eventPassthrough == 'horizontal') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else if (this.options.eventPassthrough == 'vertical') {\n\t\t\t\t\tthis.initiated = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdeltaX = 0;\n\t\t\t}\n\n\t\t\tdeltaX = this.hasHorizontalScroll ? deltaX : 0;\n\t\t\tdeltaY = this.hasVerticalScroll ? deltaY : 0;\n\n\t\t\tnewX = this.x + deltaX;\n\t\t\tnewY = this.y + deltaY;\n\n\t\t\t// Slow down if outside of the boundaries\n\t\t\tif (newX > 0 || newX < this.maxScrollX) {\n\t\t\t\tnewX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;\n\t\t\t}\n\t\t\tif (newY > 0 || newY < this.maxScrollY) {\n\t\t\t\tnewY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;\n\t\t\t}\n\n\t\t\tthis.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;\n\t\t\tthis.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;\n\n\t\t\tif (!this.moved) {\n\t\t\t\tthis._execEvent('scrollStart');\n\t\t\t}\n\n\t\t\tthis.moved = true;\n\n\t\t\tthis._translate(newX, newY);\n\n\t\t\t/* REPLACE START: _move */\n\t\t\tif (timestamp - this.startTime > 300) {\n\t\t\t\tthis.startTime = timestamp;\n\t\t\t\tthis.startX = this.x;\n\t\t\t\tthis.startY = this.y;\n\n\t\t\t\tif (this.options.probeType == 1) {\n\t\t\t\t\tthis._execEvent('scroll');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.probeType > 1) {\n\t\t\t\tthis._execEvent('scroll');\n\t\t\t}\n\t\t\t/* REPLACE END: _move */\n\t\t},\n\n\t\t_end: function _end(e) {\n\t\t\tif (!this.enabled || utils.eventType[e.type] !== this.initiated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar point = e.changedTouches ? e.changedTouches[0] : e,\n\t\t\t    momentumX,\n\t\t\t    momentumY,\n\t\t\t    duration = utils.getTime() - this.startTime,\n\t\t\t    newX = Math.round(this.x),\n\t\t\t    newY = Math.round(this.y),\n\t\t\t    distanceX = Math.abs(newX - this.startX),\n\t\t\t    distanceY = Math.abs(newY - this.startY),\n\t\t\t    time = 0,\n\t\t\t    easing = '';\n\n\t\t\tthis.isInTransition = 0;\n\t\t\tthis.initiated = 0;\n\t\t\tthis.endTime = utils.getTime();\n\n\t\t\t// reset if we are outside of the boundaries\n\t\t\tif (this.resetPosition(this.options.bounceTime)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.scrollTo(newX, newY); // ensures that the last position is rounded\n\n\t\t\t// we scrolled less than 10 pixels\n\t\t\tif (!this.moved) {\n\t\t\t\tif (this.options.tap) {\n\t\t\t\t\tutils.tap(e, this.options.tap);\n\t\t\t\t}\n\n\t\t\t\tif (this.options.click) {\n\t\t\t\t\tutils.click(e);\n\t\t\t\t}\n\n\t\t\t\tthis._execEvent('scrollCancel');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100) {\n\t\t\t\tthis._execEvent('flick');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// start momentum animation if needed\n\t\t\tif (this.options.momentum && duration < 300) {\n\t\t\t\tmomentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };\n\t\t\t\tmomentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };\n\t\t\t\tnewX = momentumX.destination;\n\t\t\t\tnewY = momentumY.destination;\n\t\t\t\ttime = Math.max(momentumX.duration, momentumY.duration);\n\t\t\t\tthis.isInTransition = 1;\n\t\t\t}\n\n\t\t\tif (this.options.snap) {\n\t\t\t\tvar snap = this._nearestSnap(newX, newY);\n\t\t\t\tthis.currentPage = snap;\n\t\t\t\ttime = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(newX - snap.x), 1000), Math.min(Math.abs(newY - snap.y), 1000)), 300);\n\t\t\t\tnewX = snap.x;\n\t\t\t\tnewY = snap.y;\n\n\t\t\t\tthis.directionX = 0;\n\t\t\t\tthis.directionY = 0;\n\t\t\t\teasing = this.options.bounceEasing;\n\t\t\t}\n\n\t\t\t// INSERT POINT: _end\n\n\t\t\tif (newX != this.x || newY != this.y) {\n\t\t\t\t// change easing function when scroller goes out of the boundaries\n\t\t\t\tif (newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY) {\n\t\t\t\t\teasing = utils.ease.quadratic;\n\t\t\t\t}\n\n\t\t\t\tthis.scrollTo(newX, newY, time, easing);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._execEvent('scrollEnd');\n\t\t},\n\n\t\t_resize: function _resize() {\n\t\t\tvar that = this;\n\n\t\t\tclearTimeout(this.resizeTimeout);\n\n\t\t\tthis.resizeTimeout = setTimeout(function () {\n\t\t\t\tthat.refresh();\n\t\t\t}, this.options.resizePolling);\n\t\t},\n\n\t\tresetPosition: function resetPosition(time) {\n\t\t\tvar x = this.x,\n\t\t\t    y = this.y;\n\n\t\t\ttime = time || 0;\n\n\t\t\tif (!this.hasHorizontalScroll || this.x > 0) {\n\t\t\t\tx = 0;\n\t\t\t} else if (this.x < this.maxScrollX) {\n\t\t\t\tx = this.maxScrollX;\n\t\t\t}\n\n\t\t\tif (!this.hasVerticalScroll || this.y > 0) {\n\t\t\t\ty = 0;\n\t\t\t} else if (this.y < this.maxScrollY) {\n\t\t\t\ty = this.maxScrollY;\n\t\t\t}\n\n\t\t\tif (x == this.x && y == this.y) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.scrollTo(x, y, time, this.options.bounceEasing);\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdisable: function disable() {\n\t\t\tthis.enabled = false;\n\t\t},\n\n\t\tenable: function enable() {\n\t\t\tthis.enabled = true;\n\t\t},\n\n\t\trefresh: function refresh() {\n\t\t\tvar rf = this.wrapper.offsetHeight; // Force reflow\n\n\t\t\tthis.wrapperWidth = this.wrapper.clientWidth;\n\t\t\tthis.wrapperHeight = this.wrapper.clientHeight;\n\n\t\t\t/* REPLACE START: refresh */\n\n\t\t\tthis.scrollerWidth = this.scroller.offsetWidth;\n\t\t\tthis.scrollerHeight = this.scroller.offsetHeight;\n\n\t\t\tthis.maxScrollX = this.wrapperWidth - this.scrollerWidth;\n\t\t\tthis.maxScrollY = this.wrapperHeight - this.scrollerHeight;\n\n\t\t\t/* REPLACE END: refresh */\n\n\t\t\tthis.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;\n\t\t\tthis.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;\n\n\t\t\tif (!this.hasHorizontalScroll) {\n\t\t\t\tthis.maxScrollX = 0;\n\t\t\t\tthis.scrollerWidth = this.wrapperWidth;\n\t\t\t}\n\n\t\t\tif (!this.hasVerticalScroll) {\n\t\t\t\tthis.maxScrollY = 0;\n\t\t\t\tthis.scrollerHeight = this.wrapperHeight;\n\t\t\t}\n\n\t\t\tthis.endTime = 0;\n\t\t\tthis.directionX = 0;\n\t\t\tthis.directionY = 0;\n\n\t\t\tthis.wrapperOffset = utils.offset(this.wrapper);\n\n\t\t\tthis._execEvent('refresh');\n\n\t\t\tthis.resetPosition();\n\n\t\t\t// INSERT POINT: _refresh\n\t\t},\n\n\t\ton: function on(type, fn) {\n\t\t\tif (!this._events[type]) {\n\t\t\t\tthis._events[type] = [];\n\t\t\t}\n\n\t\t\tthis._events[type].push(fn);\n\t\t},\n\n\t\toff: function off(type, fn) {\n\t\t\tif (!this._events[type]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar index = this._events[type].indexOf(fn);\n\n\t\t\tif (index > -1) {\n\t\t\t\tthis._events[type].splice(index, 1);\n\t\t\t}\n\t\t},\n\n\t\t_execEvent: function _execEvent(type) {\n\t\t\tif (!this._events[type]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar i = 0,\n\t\t\t    l = this._events[type].length;\n\n\t\t\tif (!l) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (; i < l; i++) {\n\t\t\t\tthis._events[type][i].apply(this, [].slice.call(arguments, 1));\n\t\t\t}\n\t\t},\n\n\t\tscrollBy: function scrollBy(x, y, time, easing) {\n\t\t\tx = this.x + x;\n\t\t\ty = this.y + y;\n\t\t\ttime = time || 0;\n\n\t\t\tthis.scrollTo(x, y, time, easing);\n\t\t},\n\n\t\tscrollTo: function scrollTo(x, y, time, easing) {\n\t\t\teasing = easing || utils.ease.circular;\n\n\t\t\tthis.isInTransition = this.options.useTransition && time > 0;\n\t\t\tvar transitionType = this.options.useTransition && easing.style;\n\t\t\tif (!time || transitionType) {\n\t\t\t\tif (transitionType) {\n\t\t\t\t\tthis._transitionTimingFunction(easing.style);\n\t\t\t\t\tthis._transitionTime(time);\n\t\t\t\t}\n\t\t\t\tthis._translate(x, y);\n\t\t\t} else {\n\t\t\t\tthis._animate(x, y, time, easing.fn);\n\t\t\t}\n\t\t},\n\n\t\tscrollToElement: function scrollToElement(el, time, offsetX, offsetY, easing) {\n\t\t\tel = el.nodeType ? el : this.scroller.querySelector(el);\n\n\t\t\tif (!el) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar pos = utils.offset(el);\n\n\t\t\tpos.left -= this.wrapperOffset.left;\n\t\t\tpos.top -= this.wrapperOffset.top;\n\n\t\t\t// if offsetX/Y are true we center the element to the screen\n\t\t\tif (offsetX === true) {\n\t\t\t\toffsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);\n\t\t\t}\n\t\t\tif (offsetY === true) {\n\t\t\t\toffsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);\n\t\t\t}\n\n\t\t\tpos.left -= offsetX || 0;\n\t\t\tpos.top -= offsetY || 0;\n\n\t\t\tpos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;\n\t\t\tpos.top = pos.top > 0 ? 0 : pos.top < this.maxScrollY ? this.maxScrollY : pos.top;\n\n\t\t\ttime = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top)) : time;\n\n\t\t\tthis.scrollTo(pos.left, pos.top, time, easing);\n\t\t},\n\n\t\t_transitionTime: function _transitionTime(time) {\n\t\t\ttime = time || 0;\n\n\t\t\tvar durationProp = utils.style.transitionDuration;\n\t\t\tthis.scrollerStyle[durationProp] = time + 'ms';\n\n\t\t\tif (!time && utils.isBadAndroid) {\n\t\t\t\tthis.scrollerStyle[durationProp] = '0.0001ms';\n\t\t\t\t// remove 0.0001ms\n\t\t\t\tvar self = this;\n\t\t\t\trAF(function () {\n\t\t\t\t\tif (self.scrollerStyle[durationProp] === '0.0001ms') {\n\t\t\t\t\t\tself.scrollerStyle[durationProp] = '0s';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.indicators) {\n\t\t\t\tfor (var i = this.indicators.length; i--;) {\n\t\t\t\t\tthis.indicators[i].transitionTime(time);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// INSERT POINT: _transitionTime\n\t\t},\n\n\t\t_transitionTimingFunction: function _transitionTimingFunction(easing) {\n\t\t\tthis.scrollerStyle[utils.style.transitionTimingFunction] = easing;\n\n\t\t\tif (this.indicators) {\n\t\t\t\tfor (var i = this.indicators.length; i--;) {\n\t\t\t\t\tthis.indicators[i].transitionTimingFunction(easing);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// INSERT POINT: _transitionTimingFunction\n\t\t},\n\n\t\t_translate: function _translate(x, y) {\n\t\t\tif (this.options.useTransform) {\n\n\t\t\t\t/* REPLACE START: _translate */\n\n\t\t\t\tthis.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;\n\n\t\t\t\t/* REPLACE END: _translate */\n\t\t\t} else {\n\t\t\t\tx = Math.round(x);\n\t\t\t\ty = Math.round(y);\n\t\t\t\tthis.scrollerStyle.left = x + 'px';\n\t\t\t\tthis.scrollerStyle.top = y + 'px';\n\t\t\t}\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\tif (this.indicators) {\n\t\t\t\tfor (var i = this.indicators.length; i--;) {\n\t\t\t\t\tthis.indicators[i].updatePosition();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// INSERT POINT: _translate\n\t\t},\n\n\t\t_initEvents: function _initEvents(remove) {\n\t\t\tvar eventType = remove ? utils.removeEvent : utils.addEvent,\n\t\t\t    target = this.options.bindToWrapper ? this.wrapper : window;\n\n\t\t\teventType(window, 'orientationchange', this);\n\t\t\teventType(window, 'resize', this);\n\n\t\t\tif (this.options.click) {\n\t\t\t\teventType(this.wrapper, 'click', this, true);\n\t\t\t}\n\n\t\t\tif (!this.options.disableMouse) {\n\t\t\t\teventType(this.wrapper, 'mousedown', this);\n\t\t\t\teventType(target, 'mousemove', this);\n\t\t\t\teventType(target, 'mousecancel', this);\n\t\t\t\teventType(target, 'mouseup', this);\n\t\t\t}\n\n\t\t\tif (utils.hasPointer && !this.options.disablePointer) {\n\t\t\t\teventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\t\teventType(target, utils.prefixPointerEvent('pointermove'), this);\n\t\t\t\teventType(target, utils.prefixPointerEvent('pointercancel'), this);\n\t\t\t\teventType(target, utils.prefixPointerEvent('pointerup'), this);\n\t\t\t}\n\n\t\t\tif (utils.hasTouch && !this.options.disableTouch) {\n\t\t\t\teventType(this.wrapper, 'touchstart', this);\n\t\t\t\teventType(target, 'touchmove', this);\n\t\t\t\teventType(target, 'touchcancel', this);\n\t\t\t\teventType(target, 'touchend', this);\n\t\t\t}\n\n\t\t\teventType(this.scroller, 'transitionend', this);\n\t\t\teventType(this.scroller, 'webkitTransitionEnd', this);\n\t\t\teventType(this.scroller, 'oTransitionEnd', this);\n\t\t\teventType(this.scroller, 'MSTransitionEnd', this);\n\t\t},\n\n\t\tgetComputedPosition: function getComputedPosition() {\n\t\t\tvar matrix = window.getComputedStyle(this.scroller, null),\n\t\t\t    x,\n\t\t\t    y;\n\n\t\t\tif (this.options.useTransform) {\n\t\t\t\tmatrix = matrix[utils.style.transform].split(')')[0].split(', ');\n\t\t\t\tx = +(matrix[12] || matrix[4]);\n\t\t\t\ty = +(matrix[13] || matrix[5]);\n\t\t\t} else {\n\t\t\t\tx = +matrix.left.replace(/[^-\\d.]/g, '');\n\t\t\t\ty = +matrix.top.replace(/[^-\\d.]/g, '');\n\t\t\t}\n\n\t\t\treturn { x: x, y: y };\n\t\t},\n\t\t_initIndicators: function _initIndicators() {\n\t\t\tvar interactive = this.options.interactiveScrollbars,\n\t\t\t    customStyle = typeof this.options.scrollbars != 'string',\n\t\t\t    indicators = [],\n\t\t\t    indicator;\n\n\t\t\tvar that = this;\n\n\t\t\tthis.indicators = [];\n\n\t\t\tif (this.options.scrollbars) {\n\t\t\t\t// Vertical scrollbar\n\t\t\t\tif (this.options.scrollY) {\n\t\t\t\t\tindicator = {\n\t\t\t\t\t\tel: createDefaultScrollbar('v', interactive, this.options.scrollbars),\n\t\t\t\t\t\tinteractive: interactive,\n\t\t\t\t\t\tdefaultScrollbars: true,\n\t\t\t\t\t\tcustomStyle: customStyle,\n\t\t\t\t\t\tresize: this.options.resizeScrollbars,\n\t\t\t\t\t\tshrink: this.options.shrinkScrollbars,\n\t\t\t\t\t\tfade: this.options.fadeScrollbars,\n\t\t\t\t\t\tlistenX: false\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.wrapper.appendChild(indicator.el);\n\t\t\t\t\tindicators.push(indicator);\n\t\t\t\t}\n\n\t\t\t\t// Horizontal scrollbar\n\t\t\t\tif (this.options.scrollX) {\n\t\t\t\t\tindicator = {\n\t\t\t\t\t\tel: createDefaultScrollbar('h', interactive, this.options.scrollbars),\n\t\t\t\t\t\tinteractive: interactive,\n\t\t\t\t\t\tdefaultScrollbars: true,\n\t\t\t\t\t\tcustomStyle: customStyle,\n\t\t\t\t\t\tresize: this.options.resizeScrollbars,\n\t\t\t\t\t\tshrink: this.options.shrinkScrollbars,\n\t\t\t\t\t\tfade: this.options.fadeScrollbars,\n\t\t\t\t\t\tlistenY: false\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.wrapper.appendChild(indicator.el);\n\t\t\t\t\tindicators.push(indicator);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.indicators) {\n\t\t\t\t// TODO: check concat compatibility\n\t\t\t\tindicators = indicators.concat(this.options.indicators);\n\t\t\t}\n\n\t\t\tfor (var i = indicators.length; i--;) {\n\t\t\t\tthis.indicators.push(new Indicator(this, indicators[i]));\n\t\t\t}\n\n\t\t\t// TODO: check if we can use array.map (wide compatibility and performance issues)\n\t\t\tfunction _indicatorsMap(fn) {\n\t\t\t\tif (that.indicators) {\n\t\t\t\t\tfor (var i = that.indicators.length; i--;) {\n\t\t\t\t\t\tfn.call(that.indicators[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.fadeScrollbars) {\n\t\t\t\tthis.on('scrollEnd', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.on('scrollCancel', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.on('scrollStart', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade(1);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.on('beforeScrollStart', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade(1, true);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.on('refresh', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.on('destroy', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t});\n\n\t\t\t\tdelete this.indicators;\n\t\t\t});\n\t\t},\n\n\t\t_initWheel: function _initWheel() {\n\t\t\tutils.addEvent(this.wrapper, 'wheel', this);\n\t\t\tutils.addEvent(this.wrapper, 'mousewheel', this);\n\t\t\tutils.addEvent(this.wrapper, 'DOMMouseScroll', this);\n\n\t\t\tthis.on('destroy', function () {\n\t\t\t\tclearTimeout(this.wheelTimeout);\n\t\t\t\tthis.wheelTimeout = null;\n\t\t\t\tutils.removeEvent(this.wrapper, 'wheel', this);\n\t\t\t\tutils.removeEvent(this.wrapper, 'mousewheel', this);\n\t\t\t\tutils.removeEvent(this.wrapper, 'DOMMouseScroll', this);\n\t\t\t});\n\t\t},\n\n\t\t_wheel: function _wheel(e) {\n\t\t\tif (!this.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.preventDefault();\n\n\t\t\tvar wheelDeltaX,\n\t\t\t    wheelDeltaY,\n\t\t\t    newX,\n\t\t\t    newY,\n\t\t\t    that = this;\n\n\t\t\tif (this.wheelTimeout === undefined) {\n\t\t\t\tthat._execEvent('scrollStart');\n\t\t\t}\n\n\t\t\t// Execute the scrollEnd event after 400ms the wheel stopped scrolling\n\t\t\tclearTimeout(this.wheelTimeout);\n\t\t\tthis.wheelTimeout = setTimeout(function () {\n\t\t\t\tif (!that.options.snap) {\n\t\t\t\t\tthat._execEvent('scrollEnd');\n\t\t\t\t}\n\t\t\t\tthat.wheelTimeout = undefined;\n\t\t\t}, 400);\n\n\t\t\tif ('deltaX' in e) {\n\t\t\t\tif (e.deltaMode === 1) {\n\t\t\t\t\twheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;\n\t\t\t\t\twheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;\n\t\t\t\t} else {\n\t\t\t\t\twheelDeltaX = -e.deltaX;\n\t\t\t\t\twheelDeltaY = -e.deltaY;\n\t\t\t\t}\n\t\t\t} else if ('wheelDeltaX' in e) {\n\t\t\t\twheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;\n\t\t\t\twheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;\n\t\t\t} else if ('wheelDelta' in e) {\n\t\t\t\twheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;\n\t\t\t} else if ('detail' in e) {\n\t\t\t\twheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twheelDeltaX *= this.options.invertWheelDirection;\n\t\t\twheelDeltaY *= this.options.invertWheelDirection;\n\n\t\t\tif (!this.hasVerticalScroll) {\n\t\t\t\twheelDeltaX = wheelDeltaY;\n\t\t\t\twheelDeltaY = 0;\n\t\t\t}\n\n\t\t\tif (this.options.snap) {\n\t\t\t\tnewX = this.currentPage.pageX;\n\t\t\t\tnewY = this.currentPage.pageY;\n\n\t\t\t\tif (wheelDeltaX > 0) {\n\t\t\t\t\tnewX--;\n\t\t\t\t} else if (wheelDeltaX < 0) {\n\t\t\t\t\tnewX++;\n\t\t\t\t}\n\n\t\t\t\tif (wheelDeltaY > 0) {\n\t\t\t\t\tnewY--;\n\t\t\t\t} else if (wheelDeltaY < 0) {\n\t\t\t\t\tnewY++;\n\t\t\t\t}\n\n\t\t\t\tthis.goToPage(newX, newY);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnewX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);\n\t\t\tnewY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);\n\n\t\t\tthis.directionX = wheelDeltaX > 0 ? -1 : wheelDeltaX < 0 ? 1 : 0;\n\t\t\tthis.directionY = wheelDeltaY > 0 ? -1 : wheelDeltaY < 0 ? 1 : 0;\n\n\t\t\tif (newX > 0) {\n\t\t\t\tnewX = 0;\n\t\t\t} else if (newX < this.maxScrollX) {\n\t\t\t\tnewX = this.maxScrollX;\n\t\t\t}\n\n\t\t\tif (newY > 0) {\n\t\t\t\tnewY = 0;\n\t\t\t} else if (newY < this.maxScrollY) {\n\t\t\t\tnewY = this.maxScrollY;\n\t\t\t}\n\n\t\t\tthis.scrollTo(newX, newY, 0);\n\n\t\t\tif (this.options.probeType > 1) {\n\t\t\t\tthis._execEvent('scroll');\n\t\t\t}\n\n\t\t\t// INSERT POINT: _wheel\n\t\t},\n\n\t\t_initSnap: function _initSnap() {\n\t\t\tthis.currentPage = {};\n\n\t\t\tif (typeof this.options.snap == 'string') {\n\t\t\t\tthis.options.snap = this.scroller.querySelectorAll(this.options.snap);\n\t\t\t}\n\n\t\t\tthis.on('refresh', function () {\n\t\t\t\tvar i = 0,\n\t\t\t\t    l,\n\t\t\t\t    m = 0,\n\t\t\t\t    n,\n\t\t\t\t    cx,\n\t\t\t\t    cy,\n\t\t\t\t    x = 0,\n\t\t\t\t    y,\n\t\t\t\t    stepX = this.options.snapStepX || this.wrapperWidth,\n\t\t\t\t    stepY = this.options.snapStepY || this.wrapperHeight,\n\t\t\t\t    el;\n\n\t\t\t\tthis.pages = [];\n\n\t\t\t\tif (!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.options.snap === true) {\n\t\t\t\t\tcx = Math.round(stepX / 2);\n\t\t\t\t\tcy = Math.round(stepY / 2);\n\n\t\t\t\t\twhile (x > -this.scrollerWidth) {\n\t\t\t\t\t\tthis.pages[i] = [];\n\t\t\t\t\t\tl = 0;\n\t\t\t\t\t\ty = 0;\n\n\t\t\t\t\t\twhile (y > -this.scrollerHeight) {\n\t\t\t\t\t\t\tthis.pages[i][l] = {\n\t\t\t\t\t\t\t\tx: Math.max(x, this.maxScrollX),\n\t\t\t\t\t\t\t\ty: Math.max(y, this.maxScrollY),\n\t\t\t\t\t\t\t\twidth: stepX,\n\t\t\t\t\t\t\t\theight: stepY,\n\t\t\t\t\t\t\t\tcx: x - cx,\n\t\t\t\t\t\t\t\tcy: y - cy\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ty -= stepY;\n\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tx -= stepX;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tel = this.options.snap;\n\t\t\t\t\tl = el.length;\n\t\t\t\t\tn = -1;\n\n\t\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\t\tif (i === 0 || el[i].offsetLeft <= el[i - 1].offsetLeft) {\n\t\t\t\t\t\t\tm = 0;\n\t\t\t\t\t\t\tn++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.pages[m]) {\n\t\t\t\t\t\t\tthis.pages[m] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tx = Math.max(-el[i].offsetLeft, this.maxScrollX);\n\t\t\t\t\t\ty = Math.max(-el[i].offsetTop, this.maxScrollY);\n\t\t\t\t\t\tcx = x - Math.round(el[i].offsetWidth / 2);\n\t\t\t\t\t\tcy = y - Math.round(el[i].offsetHeight / 2);\n\n\t\t\t\t\t\tthis.pages[m][n] = {\n\t\t\t\t\t\t\tx: x,\n\t\t\t\t\t\t\ty: y,\n\t\t\t\t\t\t\twidth: el[i].offsetWidth,\n\t\t\t\t\t\t\theight: el[i].offsetHeight,\n\t\t\t\t\t\t\tcx: cx,\n\t\t\t\t\t\t\tcy: cy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (x > this.maxScrollX) {\n\t\t\t\t\t\t\tm++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);\n\n\t\t\t\t// Update snap threshold if needed\n\t\t\t\tif (this.options.snapThreshold % 1 === 0) {\n\t\t\t\t\tthis.snapThresholdX = this.options.snapThreshold;\n\t\t\t\t\tthis.snapThresholdY = this.options.snapThreshold;\n\t\t\t\t} else {\n\t\t\t\t\tthis.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);\n\t\t\t\t\tthis.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.on('flick', function () {\n\t\t\t\tvar time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.x - this.startX), 1000), Math.min(Math.abs(this.y - this.startY), 1000)), 300);\n\n\t\t\t\tthis.goToPage(this.currentPage.pageX + this.directionX, this.currentPage.pageY + this.directionY, time);\n\t\t\t});\n\t\t},\n\n\t\t_nearestSnap: function _nearestSnap(x, y) {\n\t\t\tif (!this.pages.length) {\n\t\t\t\treturn { x: 0, y: 0, pageX: 0, pageY: 0 };\n\t\t\t}\n\n\t\t\tvar i = 0,\n\t\t\t    l = this.pages.length,\n\t\t\t    m = 0;\n\n\t\t\t// Check if we exceeded the snap threshold\n\t\t\tif (Math.abs(x - this.absStartX) < this.snapThresholdX && Math.abs(y - this.absStartY) < this.snapThresholdY) {\n\t\t\t\treturn this.currentPage;\n\t\t\t}\n\n\t\t\tif (x > 0) {\n\t\t\t\tx = 0;\n\t\t\t} else if (x < this.maxScrollX) {\n\t\t\t\tx = this.maxScrollX;\n\t\t\t}\n\n\t\t\tif (y > 0) {\n\t\t\t\ty = 0;\n\t\t\t} else if (y < this.maxScrollY) {\n\t\t\t\ty = this.maxScrollY;\n\t\t\t}\n\n\t\t\tfor (; i < l; i++) {\n\t\t\t\tif (x >= this.pages[i][0].cx) {\n\t\t\t\t\tx = this.pages[i][0].x;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tl = this.pages[i].length;\n\n\t\t\tfor (; m < l; m++) {\n\t\t\t\tif (y >= this.pages[0][m].cy) {\n\t\t\t\t\ty = this.pages[0][m].y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i == this.currentPage.pageX) {\n\t\t\t\ti += this.directionX;\n\n\t\t\t\tif (i < 0) {\n\t\t\t\t\ti = 0;\n\t\t\t\t} else if (i >= this.pages.length) {\n\t\t\t\t\ti = this.pages.length - 1;\n\t\t\t\t}\n\n\t\t\t\tx = this.pages[i][0].x;\n\t\t\t}\n\n\t\t\tif (m == this.currentPage.pageY) {\n\t\t\t\tm += this.directionY;\n\n\t\t\t\tif (m < 0) {\n\t\t\t\t\tm = 0;\n\t\t\t\t} else if (m >= this.pages[0].length) {\n\t\t\t\t\tm = this.pages[0].length - 1;\n\t\t\t\t}\n\n\t\t\t\ty = this.pages[0][m].y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tpageX: i,\n\t\t\t\tpageY: m\n\t\t\t};\n\t\t},\n\n\t\tgoToPage: function goToPage(x, y, time, easing) {\n\t\t\teasing = easing || this.options.bounceEasing;\n\n\t\t\tif (x >= this.pages.length) {\n\t\t\t\tx = this.pages.length - 1;\n\t\t\t} else if (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y >= this.pages[x].length) {\n\t\t\t\ty = this.pages[x].length - 1;\n\t\t\t} else if (y < 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tvar posX = this.pages[x][y].x,\n\t\t\t    posY = this.pages[x][y].y;\n\n\t\t\ttime = time === undefined ? this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(posX - this.x), 1000), Math.min(Math.abs(posY - this.y), 1000)), 300) : time;\n\n\t\t\tthis.currentPage = {\n\t\t\t\tx: posX,\n\t\t\t\ty: posY,\n\t\t\t\tpageX: x,\n\t\t\t\tpageY: y\n\t\t\t};\n\n\t\t\tthis.scrollTo(posX, posY, time, easing);\n\t\t},\n\n\t\tnext: function next(time, easing) {\n\t\t\tvar x = this.currentPage.pageX,\n\t\t\t    y = this.currentPage.pageY;\n\n\t\t\tx++;\n\n\t\t\tif (x >= this.pages.length && this.hasVerticalScroll) {\n\t\t\t\tx = 0;\n\t\t\t\ty++;\n\t\t\t}\n\n\t\t\tthis.goToPage(x, y, time, easing);\n\t\t},\n\n\t\tprev: function prev(time, easing) {\n\t\t\tvar x = this.currentPage.pageX,\n\t\t\t    y = this.currentPage.pageY;\n\n\t\t\tx--;\n\n\t\t\tif (x < 0 && this.hasVerticalScroll) {\n\t\t\t\tx = 0;\n\t\t\t\ty--;\n\t\t\t}\n\n\t\t\tthis.goToPage(x, y, time, easing);\n\t\t},\n\n\t\t_initKeys: function _initKeys(e) {\n\t\t\t// default key bindings\n\t\t\tvar keys = {\n\t\t\t\tpageUp: 33,\n\t\t\t\tpageDown: 34,\n\t\t\t\tend: 35,\n\t\t\t\thome: 36,\n\t\t\t\tleft: 37,\n\t\t\t\tup: 38,\n\t\t\t\tright: 39,\n\t\t\t\tdown: 40\n\t\t\t};\n\t\t\tvar i;\n\n\t\t\t// if you give me characters I give you keycode\n\t\t\tif (_typeof(this.options.keyBindings) == 'object') {\n\t\t\t\tfor (i in this.options.keyBindings) {\n\t\t\t\t\tif (typeof this.options.keyBindings[i] == 'string') {\n\t\t\t\t\t\tthis.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.options.keyBindings = {};\n\t\t\t}\n\n\t\t\tfor (i in keys) {\n\t\t\t\tthis.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];\n\t\t\t}\n\n\t\t\tutils.addEvent(window, 'keydown', this);\n\n\t\t\tthis.on('destroy', function () {\n\t\t\t\tutils.removeEvent(window, 'keydown', this);\n\t\t\t});\n\t\t},\n\n\t\t_key: function _key(e) {\n\t\t\tif (!this.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar snap = this.options.snap,\n\t\t\t    // we are using this alot, better to cache it\n\t\t\tnewX = snap ? this.currentPage.pageX : this.x,\n\t\t\t    newY = snap ? this.currentPage.pageY : this.y,\n\t\t\t    now = utils.getTime(),\n\t\t\t    prevTime = this.keyTime || 0,\n\t\t\t    acceleration = 0.250,\n\t\t\t    pos;\n\n\t\t\tif (this.options.useTransition && this.isInTransition) {\n\t\t\t\tpos = this.getComputedPosition();\n\n\t\t\t\tthis._translate(Math.round(pos.x), Math.round(pos.y));\n\t\t\t\tthis.isInTransition = false;\n\t\t\t}\n\n\t\t\tthis.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;\n\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase this.options.keyBindings.pageUp:\n\t\t\t\t\tif (this.hasHorizontalScroll && !this.hasVerticalScroll) {\n\t\t\t\t\t\tnewX += snap ? 1 : this.wrapperWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewY += snap ? 1 : this.wrapperHeight;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.pageDown:\n\t\t\t\t\tif (this.hasHorizontalScroll && !this.hasVerticalScroll) {\n\t\t\t\t\t\tnewX -= snap ? 1 : this.wrapperWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewY -= snap ? 1 : this.wrapperHeight;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.end:\n\t\t\t\t\tnewX = snap ? this.pages.length - 1 : this.maxScrollX;\n\t\t\t\t\tnewY = snap ? this.pages[0].length - 1 : this.maxScrollY;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.home:\n\t\t\t\t\tnewX = 0;\n\t\t\t\t\tnewY = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.left:\n\t\t\t\t\tnewX += snap ? -1 : 5 + this.keyAcceleration >> 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.up:\n\t\t\t\t\tnewY += snap ? 1 : 5 + this.keyAcceleration >> 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.right:\n\t\t\t\t\tnewX -= snap ? -1 : 5 + this.keyAcceleration >> 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.down:\n\t\t\t\t\tnewY -= snap ? 1 : 5 + this.keyAcceleration >> 0;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (snap) {\n\t\t\t\tthis.goToPage(newX, newY);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (newX > 0) {\n\t\t\t\tnewX = 0;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t} else if (newX < this.maxScrollX) {\n\t\t\t\tnewX = this.maxScrollX;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t}\n\n\t\t\tif (newY > 0) {\n\t\t\t\tnewY = 0;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t} else if (newY < this.maxScrollY) {\n\t\t\t\tnewY = this.maxScrollY;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t}\n\n\t\t\tthis.scrollTo(newX, newY, 0);\n\n\t\t\tthis.keyTime = now;\n\t\t},\n\n\t\t_animate: function _animate(destX, destY, duration, easingFn) {\n\t\t\tvar that = this,\n\t\t\t    startX = this.x,\n\t\t\t    startY = this.y,\n\t\t\t    startTime = utils.getTime(),\n\t\t\t    destTime = startTime + duration;\n\n\t\t\tfunction step() {\n\t\t\t\tvar now = utils.getTime(),\n\t\t\t\t    newX,\n\t\t\t\t    newY,\n\t\t\t\t    easing;\n\n\t\t\t\tif (now >= destTime) {\n\t\t\t\t\tthat.isAnimating = false;\n\t\t\t\t\tthat._translate(destX, destY);\n\n\t\t\t\t\tif (!that.resetPosition(that.options.bounceTime)) {\n\t\t\t\t\t\tthat._execEvent('scrollEnd');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnow = (now - startTime) / duration;\n\t\t\t\teasing = easingFn(now);\n\t\t\t\tnewX = (destX - startX) * easing + startX;\n\t\t\t\tnewY = (destY - startY) * easing + startY;\n\t\t\t\tthat._translate(newX, newY);\n\n\t\t\t\tif (that.isAnimating) {\n\t\t\t\t\trAF(step);\n\t\t\t\t}\n\n\t\t\t\tif (that.options.probeType == 3) {\n\t\t\t\t\tthat._execEvent('scroll');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.isAnimating = true;\n\t\t\tstep();\n\t\t},\n\n\t\thandleEvent: function handleEvent(e) {\n\t\t\tswitch (e.type) {\n\t\t\t\tcase 'touchstart':\n\t\t\t\tcase 'pointerdown':\n\t\t\t\tcase 'MSPointerDown':\n\t\t\t\tcase 'mousedown':\n\t\t\t\t\tthis._start(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchmove':\n\t\t\t\tcase 'pointermove':\n\t\t\t\tcase 'MSPointerMove':\n\t\t\t\tcase 'mousemove':\n\t\t\t\t\tthis._move(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchend':\n\t\t\t\tcase 'pointerup':\n\t\t\t\tcase 'MSPointerUp':\n\t\t\t\tcase 'mouseup':\n\t\t\t\tcase 'touchcancel':\n\t\t\t\tcase 'pointercancel':\n\t\t\t\tcase 'MSPointerCancel':\n\t\t\t\tcase 'mousecancel':\n\t\t\t\t\tthis._end(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'orientationchange':\n\t\t\t\tcase 'resize':\n\t\t\t\t\tthis._resize();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'transitionend':\n\t\t\t\tcase 'webkitTransitionEnd':\n\t\t\t\tcase 'oTransitionEnd':\n\t\t\t\tcase 'MSTransitionEnd':\n\t\t\t\t\tthis._transitionEnd(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'wheel':\n\t\t\t\tcase 'DOMMouseScroll':\n\t\t\t\tcase 'mousewheel':\n\t\t\t\t\tthis._wheel(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'keydown':\n\t\t\t\t\tthis._key(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'click':\n\t\t\t\t\tif (this.enabled && !e._constructed) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\tfunction createDefaultScrollbar(direction, interactive, type) {\n\t\tvar scrollbar = document.createElement('div'),\n\t\t    indicator = document.createElement('div');\n\n\t\tif (type === true) {\n\t\t\tscrollbar.style.cssText = 'position:absolute;z-index:9999';\n\t\t\tindicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';\n\t\t}\n\n\t\tindicator.className = 'iScrollIndicator';\n\n\t\tif (direction == 'h') {\n\t\t\tif (type === true) {\n\t\t\t\tscrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';\n\t\t\t\tindicator.style.height = '100%';\n\t\t\t}\n\t\t\tscrollbar.className = 'iScrollHorizontalScrollbar';\n\t\t} else {\n\t\t\tif (type === true) {\n\t\t\t\tscrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';\n\t\t\t\tindicator.style.width = '100%';\n\t\t\t}\n\t\t\tscrollbar.className = 'iScrollVerticalScrollbar';\n\t\t}\n\n\t\tscrollbar.style.cssText += ';overflow:hidden';\n\n\t\tif (!interactive) {\n\t\t\tscrollbar.style.pointerEvents = 'none';\n\t\t}\n\n\t\tscrollbar.appendChild(indicator);\n\n\t\treturn scrollbar;\n\t}\n\n\tfunction Indicator(scroller, options) {\n\t\tthis.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;\n\t\tthis.wrapperStyle = this.wrapper.style;\n\t\tthis.indicator = this.wrapper.children[0];\n\t\tthis.indicatorStyle = this.indicator.style;\n\t\tthis.scroller = scroller;\n\n\t\tthis.options = {\n\t\t\tlistenX: true,\n\t\t\tlistenY: true,\n\t\t\tinteractive: false,\n\t\t\tresize: true,\n\t\t\tdefaultScrollbars: false,\n\t\t\tshrink: false,\n\t\t\tfade: false,\n\t\t\tspeedRatioX: 0,\n\t\t\tspeedRatioY: 0\n\t\t};\n\n\t\tfor (var i in options) {\n\t\t\tthis.options[i] = options[i];\n\t\t}\n\n\t\tthis.sizeRatioX = 1;\n\t\tthis.sizeRatioY = 1;\n\t\tthis.maxPosX = 0;\n\t\tthis.maxPosY = 0;\n\n\t\tif (this.options.interactive) {\n\t\t\tif (!this.options.disableTouch) {\n\t\t\t\tutils.addEvent(this.indicator, 'touchstart', this);\n\t\t\t\tutils.addEvent(window, 'touchend', this);\n\t\t\t}\n\t\t\tif (!this.options.disablePointer) {\n\t\t\t\tutils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\t\tutils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);\n\t\t\t}\n\t\t\tif (!this.options.disableMouse) {\n\t\t\t\tutils.addEvent(this.indicator, 'mousedown', this);\n\t\t\t\tutils.addEvent(window, 'mouseup', this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.fade) {\n\t\t\tthis.wrapperStyle[utils.style.transform] = this.scroller.translateZ;\n\t\t\tvar durationProp = utils.style.transitionDuration;\n\t\t\tthis.wrapperStyle[durationProp] = utils.isBadAndroid ? '0.0001ms' : '0ms';\n\t\t\t// remove 0.0001ms\n\t\t\tvar self = this;\n\t\t\tif (utils.isBadAndroid) {\n\t\t\t\trAF(function () {\n\t\t\t\t\tif (self.wrapperStyle[durationProp] === '0.0001ms') {\n\t\t\t\t\t\tself.wrapperStyle[durationProp] = '0s';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.wrapperStyle.opacity = '0';\n\t\t}\n\t}\n\n\tIndicator.prototype = {\n\t\thandleEvent: function handleEvent(e) {\n\t\t\tswitch (e.type) {\n\t\t\t\tcase 'touchstart':\n\t\t\t\tcase 'pointerdown':\n\t\t\t\tcase 'MSPointerDown':\n\t\t\t\tcase 'mousedown':\n\t\t\t\t\tthis._start(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchmove':\n\t\t\t\tcase 'pointermove':\n\t\t\t\tcase 'MSPointerMove':\n\t\t\t\tcase 'mousemove':\n\t\t\t\t\tthis._move(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchend':\n\t\t\t\tcase 'pointerup':\n\t\t\t\tcase 'MSPointerUp':\n\t\t\t\tcase 'mouseup':\n\t\t\t\tcase 'touchcancel':\n\t\t\t\tcase 'pointercancel':\n\t\t\t\tcase 'MSPointerCancel':\n\t\t\t\tcase 'mousecancel':\n\t\t\t\t\tthis._end(e);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function destroy() {\n\t\t\tif (this.options.fadeScrollbars) {\n\t\t\t\tclearTimeout(this.fadeTimeout);\n\t\t\t\tthis.fadeTimeout = null;\n\t\t\t}\n\t\t\tif (this.options.interactive) {\n\t\t\t\tutils.removeEvent(this.indicator, 'touchstart', this);\n\t\t\t\tutils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\t\tutils.removeEvent(this.indicator, 'mousedown', this);\n\n\t\t\t\tutils.removeEvent(window, 'touchmove', this);\n\t\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\t\tutils.removeEvent(window, 'mousemove', this);\n\n\t\t\t\tutils.removeEvent(window, 'touchend', this);\n\t\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);\n\t\t\t\tutils.removeEvent(window, 'mouseup', this);\n\t\t\t}\n\n\t\t\tif (this.options.defaultScrollbars) {\n\t\t\t\tthis.wrapper.parentNode.removeChild(this.wrapper);\n\t\t\t}\n\t\t},\n\n\t\t_start: function _start(e) {\n\t\t\tvar point = e.touches ? e.touches[0] : e;\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tthis.transitionTime();\n\n\t\t\tthis.initiated = true;\n\t\t\tthis.moved = false;\n\t\t\tthis.lastPointX = point.pageX;\n\t\t\tthis.lastPointY = point.pageY;\n\n\t\t\tthis.startTime = utils.getTime();\n\n\t\t\tif (!this.options.disableTouch) {\n\t\t\t\tutils.addEvent(window, 'touchmove', this);\n\t\t\t}\n\t\t\tif (!this.options.disablePointer) {\n\t\t\t\tutils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\t}\n\t\t\tif (!this.options.disableMouse) {\n\t\t\t\tutils.addEvent(window, 'mousemove', this);\n\t\t\t}\n\n\t\t\tthis.scroller._execEvent('beforeScrollStart');\n\t\t},\n\n\t\t_move: function _move(e) {\n\t\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\t    deltaX,\n\t\t\t    deltaY,\n\t\t\t    newX,\n\t\t\t    newY,\n\t\t\t    timestamp = utils.getTime();\n\n\t\t\tif (!this.moved) {\n\t\t\t\tthis.scroller._execEvent('scrollStart');\n\t\t\t}\n\n\t\t\tthis.moved = true;\n\n\t\t\tdeltaX = point.pageX - this.lastPointX;\n\t\t\tthis.lastPointX = point.pageX;\n\n\t\t\tdeltaY = point.pageY - this.lastPointY;\n\t\t\tthis.lastPointY = point.pageY;\n\n\t\t\tnewX = this.x + deltaX;\n\t\t\tnewY = this.y + deltaY;\n\n\t\t\tthis._pos(newX, newY);\n\n\t\t\tif (this.scroller.options.probeType == 1 && timestamp - this.startTime > 300) {\n\t\t\t\tthis.startTime = timestamp;\n\t\t\t\tthis.scroller._execEvent('scroll');\n\t\t\t} else if (this.scroller.options.probeType > 1) {\n\t\t\t\tthis.scroller._execEvent('scroll');\n\t\t\t}\n\n\t\t\t// INSERT POINT: indicator._move\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t},\n\n\t\t_end: function _end(e) {\n\t\t\tif (!this.initiated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.initiated = false;\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tutils.removeEvent(window, 'touchmove', this);\n\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\tutils.removeEvent(window, 'mousemove', this);\n\n\t\t\tif (this.scroller.options.snap) {\n\t\t\t\tvar snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);\n\n\t\t\t\tvar time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.scroller.x - snap.x), 1000), Math.min(Math.abs(this.scroller.y - snap.y), 1000)), 300);\n\n\t\t\t\tif (this.scroller.x != snap.x || this.scroller.y != snap.y) {\n\t\t\t\t\tthis.scroller.directionX = 0;\n\t\t\t\t\tthis.scroller.directionY = 0;\n\t\t\t\t\tthis.scroller.currentPage = snap;\n\t\t\t\t\tthis.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.moved) {\n\t\t\t\tthis.scroller._execEvent('scrollEnd');\n\t\t\t}\n\t\t},\n\n\t\ttransitionTime: function transitionTime(time) {\n\t\t\ttime = time || 0;\n\t\t\tvar durationProp = utils.style.transitionDuration;\n\t\t\tthis.indicatorStyle[durationProp] = time + 'ms';\n\n\t\t\tif (!time && utils.isBadAndroid) {\n\t\t\t\tthis.indicatorStyle[durationProp] = '0.0001ms';\n\t\t\t\t// remove 0.0001ms\n\t\t\t\tvar self = this;\n\t\t\t\trAF(function () {\n\t\t\t\t\tif (self.indicatorStyle[durationProp] === '0.0001ms') {\n\t\t\t\t\t\tself.indicatorStyle[durationProp] = '0s';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\ttransitionTimingFunction: function transitionTimingFunction(easing) {\n\t\t\tthis.indicatorStyle[utils.style.transitionTimingFunction] = easing;\n\t\t},\n\n\t\trefresh: function refresh() {\n\t\t\tthis.transitionTime();\n\n\t\t\tif (this.options.listenX && !this.options.listenY) {\n\t\t\t\tthis.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';\n\t\t\t} else if (this.options.listenY && !this.options.listenX) {\n\t\t\t\tthis.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';\n\t\t\t} else {\n\t\t\t\tthis.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';\n\t\t\t}\n\n\t\t\tif (this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll) {\n\t\t\t\tutils.addClass(this.wrapper, 'iScrollBothScrollbars');\n\t\t\t\tutils.removeClass(this.wrapper, 'iScrollLoneScrollbar');\n\n\t\t\t\tif (this.options.defaultScrollbars && this.options.customStyle) {\n\t\t\t\t\tif (this.options.listenX) {\n\t\t\t\t\t\tthis.wrapper.style.right = '8px';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.wrapper.style.bottom = '8px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tutils.removeClass(this.wrapper, 'iScrollBothScrollbars');\n\t\t\t\tutils.addClass(this.wrapper, 'iScrollLoneScrollbar');\n\n\t\t\t\tif (this.options.defaultScrollbars && this.options.customStyle) {\n\t\t\t\t\tif (this.options.listenX) {\n\t\t\t\t\t\tthis.wrapper.style.right = '2px';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.wrapper.style.bottom = '2px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar r = this.wrapper.offsetHeight; // force refresh\n\n\t\t\tif (this.options.listenX) {\n\t\t\t\tthis.wrapperWidth = this.wrapper.clientWidth;\n\t\t\t\tif (this.options.resize) {\n\t\t\t\t\tthis.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);\n\t\t\t\t\tthis.indicatorStyle.width = this.indicatorWidth + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tthis.indicatorWidth = this.indicator.clientWidth;\n\t\t\t\t}\n\n\t\t\t\tthis.maxPosX = this.wrapperWidth - this.indicatorWidth;\n\n\t\t\t\tif (this.options.shrink == 'clip') {\n\t\t\t\t\tthis.minBoundaryX = -this.indicatorWidth + 8;\n\t\t\t\t\tthis.maxBoundaryX = this.wrapperWidth - 8;\n\t\t\t\t} else {\n\t\t\t\t\tthis.minBoundaryX = 0;\n\t\t\t\t\tthis.maxBoundaryX = this.maxPosX;\n\t\t\t\t}\n\n\t\t\t\tthis.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX;\n\t\t\t}\n\n\t\t\tif (this.options.listenY) {\n\t\t\t\tthis.wrapperHeight = this.wrapper.clientHeight;\n\t\t\t\tif (this.options.resize) {\n\t\t\t\t\tthis.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);\n\t\t\t\t\tthis.indicatorStyle.height = this.indicatorHeight + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tthis.indicatorHeight = this.indicator.clientHeight;\n\t\t\t\t}\n\n\t\t\t\tthis.maxPosY = this.wrapperHeight - this.indicatorHeight;\n\n\t\t\t\tif (this.options.shrink == 'clip') {\n\t\t\t\t\tthis.minBoundaryY = -this.indicatorHeight + 8;\n\t\t\t\t\tthis.maxBoundaryY = this.wrapperHeight - 8;\n\t\t\t\t} else {\n\t\t\t\t\tthis.minBoundaryY = 0;\n\t\t\t\t\tthis.maxBoundaryY = this.maxPosY;\n\t\t\t\t}\n\n\t\t\t\tthis.maxPosY = this.wrapperHeight - this.indicatorHeight;\n\t\t\t\tthis.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY;\n\t\t\t}\n\n\t\t\tthis.updatePosition();\n\t\t},\n\n\t\tupdatePosition: function updatePosition() {\n\t\t\tvar x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,\n\t\t\t    y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;\n\n\t\t\tif (!this.options.ignoreBoundaries) {\n\t\t\t\tif (x < this.minBoundaryX) {\n\t\t\t\t\tif (this.options.shrink == 'scale') {\n\t\t\t\t\t\tthis.width = Math.max(this.indicatorWidth + x, 8);\n\t\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\tx = this.minBoundaryX;\n\t\t\t\t} else if (x > this.maxBoundaryX) {\n\t\t\t\t\tif (this.options.shrink == 'scale') {\n\t\t\t\t\t\tthis.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);\n\t\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t\t\tx = this.maxPosX + this.indicatorWidth - this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = this.maxBoundaryX;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.options.shrink == 'scale' && this.width != this.indicatorWidth) {\n\t\t\t\t\tthis.width = this.indicatorWidth;\n\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t}\n\n\t\t\t\tif (y < this.minBoundaryY) {\n\t\t\t\t\tif (this.options.shrink == 'scale') {\n\t\t\t\t\t\tthis.height = Math.max(this.indicatorHeight + y * 3, 8);\n\t\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\ty = this.minBoundaryY;\n\t\t\t\t} else if (y > this.maxBoundaryY) {\n\t\t\t\t\tif (this.options.shrink == 'scale') {\n\t\t\t\t\t\tthis.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);\n\t\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t\t\ty = this.maxPosY + this.indicatorHeight - this.height;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = this.maxBoundaryY;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.options.shrink == 'scale' && this.height != this.indicatorHeight) {\n\t\t\t\t\tthis.height = this.indicatorHeight;\n\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\tif (this.scroller.options.useTransform) {\n\t\t\t\tthis.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;\n\t\t\t} else {\n\t\t\t\tthis.indicatorStyle.left = x + 'px';\n\t\t\t\tthis.indicatorStyle.top = y + 'px';\n\t\t\t}\n\t\t},\n\n\t\t_pos: function _pos(x, y) {\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t} else if (x > this.maxPosX) {\n\t\t\t\tx = this.maxPosX;\n\t\t\t}\n\n\t\t\tif (y < 0) {\n\t\t\t\ty = 0;\n\t\t\t} else if (y > this.maxPosY) {\n\t\t\t\ty = this.maxPosY;\n\t\t\t}\n\n\t\t\tx = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;\n\t\t\ty = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;\n\n\t\t\tthis.scroller.scrollTo(x, y);\n\t\t},\n\n\t\tfade: function fade(val, hold) {\n\t\t\tif (hold && !this.visible) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(this.fadeTimeout);\n\t\t\tthis.fadeTimeout = null;\n\n\t\t\tvar time = val ? 250 : 500,\n\t\t\t    delay = val ? 0 : 300;\n\n\t\t\tval = val ? '1' : '0';\n\n\t\t\tthis.wrapperStyle[utils.style.transitionDuration] = time + 'ms';\n\n\t\t\tthis.fadeTimeout = setTimeout(function (val) {\n\t\t\t\tthis.wrapperStyle.opacity = val;\n\t\t\t\tthis.visible = +val;\n\t\t\t}.bind(this, val), delay);\n\t\t}\n\t};\n\n\tIScroll.utils = utils;\n\n\tif (typeof module != 'undefined' && module.exports) {\n\t\tmodule.exports = IScroll;\n\t} else if (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\treturn IScroll;\n\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t\twindow.IScroll = IScroll;\n\t}\n})(window, document, Math);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");
}});